library(tidyverse)
d <- read_csv("https://raw.githubusercontent.com/wdecisions/ba/master/nycflights13.csv")
d$weekday <- as.character(lubridate::wday(d$date,label=TRUE))
d$time <- seq(1,nrow(d))
d
library(ggplot2)
ggplot(d,aes(date,flights)) +geom_line()
mean(d$flights)
month <- d %>% group_by(month) %>%
summarize(mean=mean(flights))
month
ggplot(month,aes(month,mean)) +geom_line() + geom_point()+ scale_x_continuous(breaks = seq(1,12))
jan <- d %>% filter(month==1)
ggplot(jan,aes(days,flights)) +geom_line() + geom_point()+ scale_x_continuous(breaks = seq(1,12))
ggplot(jan,aes(day,flights)) +geom_line() + geom_point()+ scale_x_continuous(breaks = seq(1,12))
week <- jan %>% filter(day %in% seq(7,14))
ggplot(week,aes(day,flights)) +geom_line() + geom_point()+ scale_x_continuous(breaks = seq(1,12))
ggplot(week,aes(day,flights)) +geom_line() + geom_point()+ scale_x_continuous(breaks = seq(7,14))
#naive forecast
d.ts <- ts(d$flights,frequency = 7)
head(d.ts,100)
plot(d.ts,xlab="Week",ylab="Flights",ylim=c(600,1100),bty="1")
plot(d.ts,xlab="Week",ylab="Flights",ylim=c(600,1100),bty="l")
week <- window(d.ts,start=c(1,1),end=c(2,1))
plot(week,bty="l",xlab="Week")
ntrain <- 292
ntest <- length(d.ts-ntrain)
ntest <- length(d.ts)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain),end=c(1,ntrain+ntest))
naive.pred <- naive(train.ts,h=ntest)
install.packages("forecast")
library(forecast)
naive.pred <- naive(train.ts,h=ntest)
naive.pred <- naive(train.ts,h=ntest)
snaive.pred <- snaive(train.ts,h=ntest)
x <- as.data.frame(snaive.pred)
head(x,10)
tail(x,10
)
tail(x,10)
fit <- RMSE(test.ts,naive.pred$mean)
install.packages("hydroGOF")
library(hydroGOF)
fit <- RMSE(test.ts,naive.pred$mean)
install.packages("Metrics")
library(Metrics)
fit <- RMSE(test.ts,naive.pred$mean)
fit <- rmse(test.ts,naive.pred$mean)
fit
fit <- rmse(test.ts,snaive.pred$mean)
fit
cor(test.ts,snaive.pred$mean)^2
cor(test.ts,snaive.pred)^2
cor(mean(test.ts),snaive.pred$mean)^2
snaive.pred$mean
length(snaive.pred$mean)
legnth(test.ts)
test.ts
length(test.ts)
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
naive.pred <- naive(train.ts,h=ntest)
snaive.pred <- snaive(train.ts,h=ntest)
x <- as.data.frame(snaive.pred)
head(x,10)
tail(x,10)
fit <- rmse(test.ts,naive.pred$mean)
fit
fit <- rmse(test.ts,snaive.pred$mean)
fit
cor(mean(test.ts),snaive.pred$mean)^2
cor(test.ts,snaive.pred$mean)^2
#regression-based forecasts
mod <- lm(flights~time,data=d)
print(summary(mod),digits = 2)
plot(d$flights,xlab="Time",ylab="Flights",ylim=c(600,1100),bty="l",type="l")
lines(pred,lwd=,col="blue")
pred <- predict(mod,d)
plot(d$flights,xlab="Time",ylab="Flights",ylim=c(600,1100),bty="l",type="l")
lines(pred,lwd=,col="blue")
plot(d$flights,xlab="Time",ylab="Flights",ylim=c(600,1100),bty="l",type="l")
lines(pred,lwd=,col="blue")
lines(pred,lwd=2,col="red")
lines(pred,lwd=2,col="blue")
#Quadratic
mod z- lm(flights~time+I(time^2),data = d)
summary(mod)
#Quadratic
mod <- lm(flights~time+I(time^2),data = d)
summary(mod)
pred <- predict(mod,d)
plot(d$flights,xlab="Time",ylab="Flights",ylim=c(600,1100),bty="l",type="l")
lines(pred,lwd=2,col="blue")
#Trend+seasonality
mod <- lm(flights~time+I(time^2)+factor(weekday),d)
pred <- predict(mod,d)
plot(d$flights,xlab="Time",ylab="Flights",ylim=c(600,1100),bty="l",type="l")
lines(pred,lwd=2,col="blue")
mod <- tslm(train.ts~trend+I(trend^2)+season)
pred <- forecast(mod,h=73)
x <-as.data.frame(pred$mean)
cor(test.ts,x$x)^2
df < data.frame(test.ts,snaive.pred$mean,pred$mean)
df <- data.frame(test.ts,snaive.pred$mean,pred$mean)
plot(df$test.ts,xlab="Week",ylab="Daily Flights",ylim=c(600,1100),bty="l",type="l")
lines(df$snaive.pred.mean,lwd=1,col="red",lty=1)
lines(df$pred.mean,lwd=1,col="blue",lty=1)
d$firstweek <- ifelse(d$day<=7,1,0)
View(d)
d$lastweek <- ifelse(d$day>=24,1,0)
View(d)
d$holiday <- ifelse(d$date %in% as_date(c("2013-07-04"))1,0)
d$holiday <- ifelse(d$date %in% as_date(c("2013-07-04")),1,0)
d$holiday <- ifelse(d$date %in% as_Date(c("2013-07-04")),1,0)
d$holiday <- ifelse(d$date %in% as.Date(c("2013-07-04")),1,0)
View(d)
d$holiday <- ifelse(d$date %in% as.Date(c("2013-07-04","2013-11-28","2013-11-19","2013-12-24","2013-12-25")),1,0)
head(d,-c(2,3),10)
head(d,[,-c(2,3)],10)
head(d,[ ,-c(2,3)],10)
head(d,[ ,-c(2,3) ],10)
head(d[ ,-c(2,3) ],10)
tail(d[ ,-c(2,3) ],10)
train <- d[1:292,]
test <- d[293:365,]
mod <- lm(flights~time+I(time^2)+factor(weekday)+firstweek+lastweek+holiday,data = train)
summary(mod)
pred <- predict(mod,test)
pred <- predict(mod,test)
plot(test$flights,xlab="Weeks",ylab="Daily Flights",bty="l",type="l")
lines(pred,lwd=2,col="blue",lty=1)
cor(test$flights,pred)^2
test <- d[293:365,]
train <- d[1:292,]
test <- d[293:365,]
mod <- lm(flights~time+I(time^2)+factor(weekday)+firstweek+lastweek+holiday,data = train)
summary(mod)
pred <- predict(mod,test)
plot(test$flights,xlab="Weeks",ylab="Daily Flights",bty="l",type="l")
lines(pred,lwd=2,col="blue",lty=1)
cor(test$flights,pred)^2
cor(test$flights,pred)
cor(test$flights,pred)^2
#multiplicative seasonals
mod_add <- tslm(d.ts~trend+I(trend^2)+seasonal)
plot(mod_add$residuals,xlab="Weeks",ylab="Daily Flights",bty="l",type="l")
#multiplicative seasonals
mod_add <- tslm(d.ts~trend+I(trend^2)+seasonal)
#multiplicative seasonals
mod_add <- tslm(d.ts~trend+I(trend^2)+season)
plot(mod_add$residuals,xlab="Weeks",ylab="Daily Flights",bty="l",type="l")
plot(mod_add$residuals,xlab="Time",ylab="Resid",bty="l",type="l")
d.ts.log <- log(d.ts)
mod_mult <- tslm(d.ts.log~trend+I(trend^2)+season)
plot(mod_mult$residuals,xlab="Time",ylab="Resid",bty="l",type="l")
summary(mod_mult)
d.ts.log <- log(d.ts.log)
act <- exp(d.ts.log)
pre <- exp(mod_mult$fitted.values)
resid <- act-pre
plot(resid,bty="l",type="l")
cor(act,pred)^2
cor(act,pre)^2
cor(d.ts.log,mod_mult$fitted.values)^2
trend <- tslm(d.ts~trend+I(trend^2))
d$trend <- trend$fitted.values
d$seasonal <- d$flights/d$trend
d <- d %>% group_by(weekday) %>% mutate(factor=mean(seasonal)
d <- d %>% group_by(weekday) %>% mutate(factor=mean(seasonal))
d <- d %>% group_by(weekday) %>% mutate(factor=mean(seasonal))
d$add <- d$trend+d$aditive
d$add <- d$trend+d$additive
# ARIMA
d$lag <- lag(d$flights)
d
# ARIMA
d <- read_csv("https://raw.githubusercontent.com/wdecisions/ba/master/nycflights13.csv")
d$lag <- lag(d$flights)
d
source('C:/Users/conde/OneDrive - IESE Business School - University of Navarra/MiM/Business analytics R/Forecasting_time_series/forecasting_flights.R', echo=TRUE)
# ARIMA
d$lag <- lag(d$flights)
d
cor(d$flights,d$lag,use="pairwise.complete.obs")
Acf(d.ts,lag.max = 7,main="",bty="l")
mod1 <- lm(flights~lag,d)
mod1
plot(d$flights-d$lag,type = "l",bty="l")
arima <- Arima(d.ts,order=c(1,0,0))
arima
arima <- auto.arima(d.ts,seasonal = T)
arima
plot(d.ts,bty="l")
lines(arima$fitted,col="blue,lwd=1")
lines(arima$fitted,col="blue",lwd=1")
lines(arima$fitted,col="blue",lwd=1")
lines(arima$fitted,col="blue",lwd=1)
cor(d.ts,arima$fitted)^2
arima <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arima,h=73)
arima
cor(test.ts,pred$mean)^2
#random walk
arima <- Arima(d.ts,order=c(1,0,0))
arrima
arima
set.seed(1)
n <- 1000
walk <- cunsum(sample(c(-1,1),n,T))
walk <- cumsum(sample(c(-1,1),n,T))
plot(walk,type = "l",bty="l")
arima <- Arima(walk,order = c(1,0,0))
arima
#moving average
ma.centered <- ma(d.ts,order=7)
ma.trailing <- rollmean(d.ts,k=7,align = "right")
d.ts
plot(d.ts,xlab="Time",ylab="Flights",bty="l",type="l")
lines(ma.centered,lwd=2,col="blue",lty=1)
lines(ma.trailing,lwd=2,col="red",lty=1)
#holt-winters
hw <- ets(d.ts,model="MAA")
hw
plot(d.ts,bty="l",ylab="Daily flights")
lines(hw$fitted,col="blue",lwd=1)
cor(d.ts,hw$fitted)^2
hw <- ets(train.ts,model="MAA",alpha = 0.2,beta=0.2,gamma=0.2)
hw
pred <- forecast(hw,h=ntest)
cor(test.ts,pred$mean)^2
