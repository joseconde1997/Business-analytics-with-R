library(readxl)
library(tidyverse)
d <- read_excel("Scholastic.xlsx",sheet = "Exhibit 1.xlsx")
d <- read_excel("Scholastic.xlsx",sheet = "Exhibit 1")
View(d)
class(d$Departure.Date)
View(d)
d$Retained.in.2012.
mod <- lm(Retained.in.2012.~.)
mod <- lm(Retained.in.2012.~.,d)
summary(mod)
library(pls)
pcr_model <- pcr(Retained.in.2012.~.,data=d,scale=T,validation=CV)
pcr_model <- pcr(Retained.in.2012.~.,data=d,scale=T,validation="CV")
d_complete <- d %>% filter(complete.cases(.))
library(readxl)
library(tidyverse)
library(lubridate)
library(pls)
d_complete <- d %>% filter(complete.cases(.))
pcr_model <- pcr(Retained.in.2012.~.,data=d_complete,scale=T,validation="CV")
library(dplyr)
d_num <- select_if(d,is.numeric)
pcr_model <- pcr(Retained.in.2012.~.,data=d_num,scale=T,validation="CV")
summary(pcr_model)
d_factor <- select_if(d,!is.numeric)
d_factor <- select_if(d,is.numeric)
rm(d_factor)
d_factor <- select_if(d,is.factor)
View(d_factor)
rm(d_factor)
d
d_factor <- select_if(d,is.character)
View(d_factor)
d_num <- as.numeric(d)
View(d_num)
d_num <- d_num[,-1]
View(d_num)
pcr_model$Xmeans
pcr_model$scores
pcr_model$coefficients
View(pcr_model$coefficients)
summary(pcr_model)
pcr_model <- pcr(Retained.in.2012.~.,data=d_num,scale=T,validation="CV")
View(pcr_model$coefficients)
View(abs(pcr_model$coefficients))
mod_pcr <- lm(Retained.in.2012.~Total.Pax+FPP+Num.of.NonFPP+Total.Discount.Pax+FRP.Active+Days+Is.Non.Annual+
Single.Grade.Trip.Flag,d)
mod_pcr <- lm(Retained.in.2012.~Total.Pax+FPP+Num.of.Non_FPP.PAX+Total.Discount.Pax+FRP.Active+Days+Is.Non.Annual+
Single.Grade.Trip.Flag,d)
mod_pcr <- lm(Retained.in.2012.~Total.Pax+FPP+Num.of.Non_FPP.PAX+Total.Discount.Pax+FRP.Active+Days+Is.Non.Annual.+
Single.Grade.Trip.Flag,d)
mod_pcr <- lm(Retained.in.2012.~Total.Pax+FPP+Num.of.Non_FPP.PAX+Total.Discount.Pax+FRP.Active+Days+Is.Non.Annual.+
SingleGradeTripFlag,d)
summary(mod_pcr)
View(d)
View(d)
#group by state
state <- d %>% group_by(Group.State) %>% summarise(mean(Retained.in.2012.))
View(state)
d$FRP.Active
mean(d$FRP.Active)
mean(d$FRP.Active,na.rm =T)
d_complete <- d_num %>% filter(complete.cases(.))
d_complete$FRP.Active <- ifelse(d_complete$FRP.Active>mean(d_complete$FRP.Active),1,0)
summary(mod_pcr)
d$Is.Non.Annual.
d$SingleGradeTripFlag
mod_factored <- lm(Retained.in.2012.~FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,d)
summary(mod_factored)
mod_factored <- lm(Retained.in.2012.~FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,d_complete)
summary(mod_factored)
pred <- predict(mod_factored,d_complete)
library(table)
library(caret)
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
d_complete$Retained.in.2012.
length(d_complete$Retained.in.2012.)
which(d_complete$Retained.in.2012.)
class(d_complete$Retained.in.2012.)
pred <- as.numeric(pred)
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
class(d_complete$Retained.in.2012.)
pred
length(pred)
length(d_complete$Retained.in.2012.)
table(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
quantile(pred)
pred <- ifelse(pred>mean(pred),1,0)
table(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
library(rpart)
#decission trees
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
View(d)
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
library(rpart.plot)
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
tree
pred <- predict(tree,d_complete,type = "class")
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
pred <- predict(mod_factored,d_complete)
pred <- as.numeric(pred)
pred <- ifelse(pred>mean(pred),1,0)
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
View(d_complete)
View(d)
#decission trees
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State),data=d,method = "class")
library(readxl)
library(tidyverse)
library(lubridate)
library(pls)
library(dplyr)
library(caret)
library(table)
library(rpart)
library(rpart.plot)
#decission trees
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State),data=d,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
pred <- predict(tree,d,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
confusionMatrix(as.factor(pred),as.factor(d$Retained.in.2012.),dnn=c("Predicted","Actual"))
View(d)
#decission trees
d_complete <- d %>% filter(complete.cases(.))
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State),data=d,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d,type = "class")
confusionMatrix(as.factor(pred),as.factor(d$Retained.in.2012.),dnn=c("Predicted","Actual"))
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(Progeam.Code),data=d,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d,type = "class")
confusionMatrix(as.factor(pred),as.factor(d$Retained.in.2012.),dnn=c("Predicted","Actual"))
#decission trees
d_complete <- d %>% filter(complete.cases(.))
d$From.Grade <- as.numeric(d$From.Grade)
d$To.Grade <- as.numeric(d$To.Grade)
d_complete <- d %>% filter(complete.cases(.))
d_complete$range <- d$To.Grade - d$From.Grade
#decission trees
d$From.Grade <- as.numeric(d$From.Grade)
d$To.Grade <- as.numeric(d$To.Grade)
d_complete <- d %>% filter(complete.cases(.))
d_complete$range <- d_complete$To.Grade - d_complete$From.Grade
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(range),data=d,method = "class")
d_complete$range <- d_complete$To.Grade - d_complete$From.Grade
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(range),data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d$Retained.in.2012.),dnn=c("Predicted","Actual"))
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
View(d_complete)
View(d_complete$range)
View(d_complete)
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(range)+as.factor(Special.Pay),data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
View(d)
#count NAs
n_occur <- data.frame(table(d$Special.Pay))
View(n_occur)
View(d_complete)
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(range)+as.factor(Special.Pay)+
as.factor(Poverty.Code),data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
View(d_complete)
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag+as.factor(Group.State)+as.factor(range)+as.factor(Special.Pay)+
as.factor(Poverty.Code),data=d_complete,method = "class")
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
library(table)
d <- read_excel("Scholastic.xlsx",sheet = "Exhibit 1",na="NA")
View(d)
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
View(d)
d$Special.Pay
str(d)
d <- d %>% mutate_if(is.character,as.factor)
d$From.Grade <- as.factor(d$From.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
mean(d$Retained.in.2012.)
mean(d$Retained.in.2012.,rm.remove=T)
mean(d$Retained.in.2012.,na.rm =T)
library(readxl)
library(tidyverse)
#import data
library(readxl)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1")
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1")
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1")
d <- d%>% mutate_if(is.factor,~fct_lump(.x,n=10,other_level = "Other"))
d$Special.Pay <- replace(na,d$Special.Pay,"NAA")
library(readxl)
library(tidyverse)
#import data
library(readxl)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic regression
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
summary(mod1)
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
str(d)
view(str(d))
library(readxl)
library(tidyverse)
#import data
library(readxl)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic regression
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
summary(mod1)
#correlation
cor(d$FPP,d$Total.Pax)
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,FPP,data=d_complete,method = "class")
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
pred <- predict(tree,d_complete,type = "class")
confusionMatrix(as.factor(pred),as.factor(d_complete$Retained.in.2012.),dnn=c("Predicted","Actual"))
d$pred_b <- ifelse(d$pred>0.5,1,0)
d$pred <- predict(mod1)
d$pred_b <- ifelse(d$pred>0.5,1,0)
d[,48:50]
library(readxl)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic regression
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
summary(mod1)
#correlation
cor(d$FPP,d$Total.Pax)
#confusion matrix
d$pred <- predict(mod1)
d$pred_b <- ifelse(d$pred>0.5,1,0)
d[,48:50]
d[,32:34]
View(d)
View(d_complete)
d <- d[ , -c(9:11,17,18,21,39,40)]
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1 -- Data")
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1")
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
d
str(d)
View(d$Special.Pay)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1")
View(d$Special.Pay)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1",na="NA")
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
str(d$Special.Pay)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1",na="NA")
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
View(d)
#tidy and remove dates
d$Special.Pay <- d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
View(d$Special.Pay)
#tidy and remove datesd$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
#tidy and remove datesd$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d$Special.Pay[is.na(d$Special.Pay)]
d$Special.Pay
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1",na="NA")
d$Special.Pay[is.na(d$Special.Pay)]
View(d)
d$Special.Pay[!is.na(d$Special.Pay)]
length(d$Special.Pay[is.na(d$Special.Pay)])
length(d$Special.Pay[!is.na(d$Special.Pay)])
1922+470
#tidy and remove dates
d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
View(d)
library(readxl)
library(tidyverse)
#import data
library(readxl)
d <- read_excel("Scholastic.xlsx", sheet = "Exhibit 1",na="NA")
View(d)
View(d$Special.Pay)
#tidy and remove dates
d$Special.Pay[is.na(d$Special.Pay)] <- "NAA"
d <- d[ , -c(9:11,17,18,21,39,40)]
str(d)
d <- d %>% mutate_if(is.character,as.factor)
#convert columns to factors
d$From.Grade <- as.factor(d$From.Grade)
d$To.Grade <- as.factor(d$To.Grade)
d$CRM.Segment <- as.factor(d$CRM.Segment)
d$MDR.High.Grade <- as.factor(d$MDR.High.Grade)
#Keep only top 10 factor levels for each variable
d <- d %>% mutate_if(is.factor, ~fct_lump(.x, n=10, other_level ="Other"))
#keep complete cases (get rid of real NA locations- clean data)
d <- na.omit(d)
#logistic regression
#logistic model 1
mod1 <- lm(Retained.in.2012. ~ ., data=d)
summary(mod1)
#correlation
cor(d$FPP,d$Total.Pax)
#confusion matrix
d$pred <- predict(mod1)
d$pred_b <- ifelse(d$pred>0.5,1,0)
d[,32:34]
tree <- rpart(Retained.in.2012.~ FRP.Active+Is.Non.Annual.+
SingleGradeTripFlag,data=d_complete,method = "class")
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
