geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Black","Black","Black"))
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual")) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast")) +
geom_line(aes(y=Test,x=Index,color="Test")) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Black","Black"))
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual")) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast")) +
geom_line(aes(y=Test,x=Index,color="Test")) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual")) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast")) +
geom_line(aes(y=Test,x=Index)) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual")) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast")) +
geom_line(aes(y=Test,x=Index)) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))+xlab('Months')
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual")) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast 2013")) +
geom_line(aes(y=Test,x=Index)) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))+xlab('Months')
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual"),size=1) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast 2013")) +
geom_line(aes(y=Test,x=Index)) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))+xlab('Months')
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual"),size=1) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_line(aes(y=Forecast,x=Index,color="Forecast 2013")) +
geom_line(aes(y=Test,x=Index),size=1) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
geom_ribbon(aes(ymin=Lower_t,ymax=Upper_t,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Red","Blue","Black"))+xlab('Months')
ggplot(data=all_years) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted")) +
geom_ribbon(aes(ymin=lower,ymax=upper,x=index),alpha=0.2)+scale_color_manual(values=c("black", "blue"))
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(forecast)
library(gtable)
d_2 <- read_excel("amarcord.xlsx",sheet = "Wires By Month")
#rearrange data
names(d_2)<- c("Month","O7","O8","O9","O10","O11","O12","O13")
d_2$index <- month(d_2$Month)
d_2[11,5] <- 396.812
d_2 [8,5] <- d_2 [8,5]-37
d_2[,2:9]<- lapply(d_2[,2:9], function(x) as.numeric(as.character(x)))
d_2[7,3] <- NA
d_2[4,7] <- NA
d_2[12,2] <- NA
all_years <- c(d_2$O7,d_2$O8,d_2$O9,d_2$O10,d_2$O11,d_2$O12,d_2$O13)
all_years <- data.frame(month=c(1:12),transactions=as.numeric(all_years),year=year)
train <- all_years[1:72,]
non_na <- train %>% filter(complete.cases(.))
non_na <- non_na[-12,]
non_na$index <- c(1:length(non_na$month))
#Getting the trend
lm_trend <- lm(transactions~month+year,non_na)
summary(lm_trend)
plot(predict(lm_trend),col="blue",type = "l",ylim=c(300,600))
lines(non_na$transactions)
non_na$trend <- predict(lm_trend)
non_na$sub <- non_na$transactions-non_na$trend
season <- non_na %>% group_by(month) %>% summarise(Season=mean(sub))
season
non_na <- left_join(non_na,season)
non_na$predict <- non_na$trend+non_na$Season
plot(non_na$transactions,type = "l")
lines(non_na$predict,col="blue")
cor(non_na$pred,non_na$transactions)^2
test <- all_years[73:84,]
test$index <- c(73:84)
test$trend <- predict(lm_trend,test)
test$sub <- test$transactions/test$trend
test <- left_join(test,season)
test$predict <-test$trend+test$Season
plot(test$transactions,type = "l", ylim=c(350,600))
lines(test$predict,col="blue")
cor(test$predict,test$transactions)^2
rms <-(1/length(test$predict))*(test$predict-test$transactions)^2
rms <- sqrt(rms)
sum(rms)
#Applied to all years
all_years$trend <-predict(lm_trend,all_years)
all_years$sub <- all_years$transactions-all_years$trend
all_years <- left_join(all_years,season)
all_years$predict <- all_years$trend+all_years$Season
all_years$index <- c(1:84)
all_years$upper <-all_years$predict +1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
all_years$lower <- all_years$predict - 1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
cor(all_years$transactions,all_years$predict,use="complete.obs")^2
ggplot(data=all_years) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted")) +
geom_ribbon(aes(ymin=lower,ymax=upper,x=index),alpha=0.2)+scale_color_manual(values=c("black", "blue"))
ggplot(data=hw.d) + geom_line(aes(y=Actual,x=Index,color="Actual"),size=1) +
geom_line(aes(y=Predicted,x=Index,color="Predicted")) +
geom_ribbon(aes(ymin=Lower,ymax=Upper,x=Index),alpha=0.2)+
scale_color_manual(values=c("Black", "Blue"))+xlab('Months')
cor(hw$fitted,train.ts)^2
cor(fore$mean,test.ts)^2
rms <-(1/length(hw.d$Test[1:72]))*(hw.d$Forecast[1:72]-hw.d$Test[1:72])^2
rms <- sqrt(rms)
sum(rms)
rms <-(1/length(hw.d$Test[1:72]))*(hw.d$Forecast[1:72]-hw.d$Test[1:72])^2
rms
non_na <- hw.d %>% filter(complete.cases(.))
View(non_na)
non_na <- hw.d %>% filter(complete.cases(.))
rms <-(1/length(non_na$Actual[1:72]))*(non_na$Predicted[1:72]-hw.d$Actual[1:72])^2
rms <- sqrt(rms)
sum(rms)
hw.d$Actual
hw.d$Actual[1:72]
hw.d$Predicted[1:72]
rms <-(1/length(non_na$Actual[1:72]))*(non_na$Predicted[1:72]-hw.d$Actual[1:72])^2
rms
rms <-(1/length(hw.d$Actual[1:72]))*(hw.d$Predicted[1:72]-hw.d$Actual[1:72])^2
rms <- sqrt(rms)
sum(rms)
rms <-(1/length(hw.d$Actual[1:72]))*(hw.d$Predicted[1:72]-hw.d$Actual[1:72])^2
rms
rms <- sqrt(rms)
rms
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(forecast)
library(gtable)
d_2 <- read_excel("amarcord.xlsx",sheet = "Wires By Month")
#rearrange data
names(d_2)<- c("Month","O7","O8","O9","O10","O11","O12","O13")
d_2$index <- month(d_2$Month)
d_2[11,5] <- 396.812
d_2 [8,5] <- d_2 [8,5]-37
d_2[,2:9]<- lapply(d_2[,2:9], function(x) as.numeric(as.character(x)))
d_2[7,3] <- NA
d_2[4,7] <- NA
d_2[12,2] <- NA
all_years <- c(d_2$O7,d_2$O8,d_2$O9,d_2$O10,d_2$O11,d_2$O12,d_2$O13)
all_years <- data.frame(month=c(1:12),transactions=as.numeric(all_years),year=year)
train <- all_years[1:72,]
non_na <- train %>% filter(complete.cases(.))
non_na <- non_na[-12,]
non_na$index <- c(1:length(non_na$month))
#Getting the trend
lm_trend <- lm(transactions~month+year,non_na)
summary(lm_trend)
plot(predict(lm_trend),col="blue",type = "l",ylim=c(300,600))
lines(non_na$transactions)
non_na$trend <- predict(lm_trend)
non_na$sub <- non_na$transactions-non_na$trend
season <- non_na %>% group_by(month) %>% summarise(Season=mean(sub))
season
non_na <- left_join(non_na,season)
non_na$predict <- non_na$trend+non_na$Season
plot(non_na$transactions,type = "l")
lines(non_na$predict,col="blue")
cor(non_na$pred,non_na$transactions)^2
test <- all_years[73:84,]
test$index <- c(73:84)
test$trend <- predict(lm_trend,test)
test$sub <- test$transactions/test$trend
test <- left_join(test,season)
test$predict <-test$trend+test$Season
plot(test$transactions,type = "l", ylim=c(350,600))
lines(test$predict,col="blue")
cor(test$predict,test$transactions)^2
rms <-(1/length(test$predict))*(test$predict-test$transactions)^2
rms <- sqrt(rms)
sum(rms)
#Applied to all years
all_years$trend <-predict(lm_trend,all_years)
all_years$sub <- all_years$transactions-all_years$trend
all_years <- left_join(all_years,season)
all_years$predict <- all_years$trend+all_years$Season
all_years$index <- c(1:84)
all_years$upper <-all_years$predict +1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
all_years$lower <- all_years$predict - 1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
cor(all_years$transactions,all_years$predict,use="complete.obs")^2
ggplot(data=all_years) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted")) +
geom_ribbon(aes(ymin=lower,ymax=upper,x=index),alpha=0.2)+scale_color_manual(values=c("black", "blue"))
cor(non_na$pred,non_na$transactions)^2
ggplot(data=non_na) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted")) +
geom_ribbon(aes(ymin=lower,ymax=upper,x=index),alpha=0.2)+scale_color_manual(values=c("black", "blue"))
non_na
ggplot(data=non_na) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted"))
ggplot(data=non_na) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted"))+scale_color_manual(values=c("black", "blue"))
d_biggie <- d_IN %>% filter(!stri_detect_fixed(ID,"$C"))
d <- read_excel("amarcord.xlsx",sheet = "November 2010 Wires")
names(d) <- c("Amount","Date","time","ID")
d$week <- week(d$Date)
d$hour <- hour(d$time)
d$minutes <- minute(d$time)
d$seconds <- second(d$time)
d$day <- day(d$Date)
d$Amount <- as.numeric(d$Amount)
mean(d$Amount)
d <- d %>% drop_na()
d_IN <- d %>% filter(stri_detect_fixed(ID,"INC"))
d_f <-d_IN%>% filter(Amount<1000)
d_f <- d_IN %>% filter(Amount>-10)
View(d_inc)
d <- read_excel("amarcord.xlsx",sheet = "November 2010 Wires")
names(d) <- c("Amount","Date","time","ID")
d$week <- week(d$Date)
d$hour <- hour(d$time)
d$minutes <- minute(d$time)
d$seconds <- second(d$time)
d$day <- day(d$Date)
d$Amount <- as.numeric(d$Amount)
mean(d$Amount)
d <- d %>% drop_na()
d_IN <- d %>% filter(stri_detect_fixed(ID,"INC"))
View(d_IN)
d_IN <- d_IN %>% filter(!stri_detect_fixed(ID,"$C"))
d_IN <- d_IN%>% filter(Amount<1000)
d_IN <- d_IN %>% filter(Amount>-10)
sum(d_IN)
sum(d_IN$Amount)
sum(d_IN$Amount)+38040.11
al
boxplot(Amount ~ day, data=d, main="Data reading across November")
library(outliers)
library(readxl)
library(tidyverse)
library(lubridate)
library(writexl)
library(ggplot2)
library(stringi)
library(car)
library(outliers)
d <- read_excel("amarcord.xlsx",sheet = "November 2010 Wires")
names(d) <- c("Amount","Date","time","ID")
d$week <- week(d$Date)
d$hour <- hour(d$time)
d$minutes <- minute(d$time)
d$seconds <- second(d$time)
d$day <- day(d$Date)
d$Amount <- as.numeric(d$Amount)
mean(d$Amount)
d <- d %>% drop_na()
d <- d%>% filter(Amount<1000)
d <- d%>% filter(Amount>-10)
d_IN <- d %>% filter(stri_detect_fixed(ID,"INC"))
d_out <- d %>% filter(stri_detect_fixed(ID,"OUT"))
d_out$Amount <- d_out$Amount*1
d_out$Amount
d <- rbind(d_IN,d_out)
boxplot(Amount ~ day, data=d, main="Data reading across November")
#Outliers
Outlier <- outlier(d$Amount,opposite = T)
Outlier
#scores
scores(d$Amount)
outliers<-scores(d$Amount, type="chisq", prob=0.9)
View(outliers)
library(outliers)
library(readxl)
library(tidyverse)
library(lubridate)
library(writexl)
library(ggplot2)
library(stringi)
library(car)
library(outliers)
d <- read_excel("amarcord.xlsx",sheet = "November 2010 Wires")
names(d) <- c("Amount","Date","time","ID")
d$week <- week(d$Date)
d$hour <- hour(d$time)
d$minutes <- minute(d$time)
d$seconds <- second(d$time)
d$day <- day(d$Date)
d$Amount <- as.numeric(d$Amount)
mean(d$Amount)
d <- d %>% drop_na()
d <- d%>% filter(Amount<1000)
d <- d%>% filter(Amount>-10)
d_IN <- d %>% filter(stri_detect_fixed(ID,"INC"))
d_out <- d %>% filter(stri_detect_fixed(ID,"OUT"))
d_out$Amount <- d_out$Amount*1
d_out$Amount
d <- rbind(d_IN,d_out)
boxplot(Amount ~ day, data=d, main="Data reading across November")
#Cook distance
n <- nrow(d)
mod <- lm(Amount ~ day+hour, data=d)
cooksd <- cooks.distance(mod)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
str(cooksd)
influential_obs <- as.numeric(names(cooksd)[(cooksd > (4/n))])
influential_obs
d_inf <- d[influential_obs,]
d_inc <- d_inf %>% filter(stri_detect_fixed(ID,"INC"))
d_out <- d_inf %>% filter(stri_detect_fixed(ID,"OUT"))
n_occur <- data.frame(table(d_inc$ID))
repeating_freq <- n_occur[n_occur$Freq > 1,]
reapeting_freq
n_occur
d_inf <- d[influential_obs,]
tab
plot(tab$Freq,type="l")
#Outliers
Outlier <- outlier(d$Amount,opposite = T)
Outlier
#scores
scores(d$Amount)
outliers<-scores(d$Amount, type="chisq", prob=0.9)
View(outliers)
d$outliers <- scores(d$Amount, type="chisq", prob=0.9)
View(d)
table(d$outliers)
d$outliers <- as.character(d$outliers)
d_outliers <- d %>% filter(stri_detect_fixed(outliers,"TRUE"))
day <- d_outliers %>% group_by(day) %>% summarise(Transactions=sum(Amount))
View(day)
mean(day$Transactions)
plot(day,type="l")
abline(h =mean(day$Transactions) , col="red")  # add cutoff line
day <- day %>% filter(Transactions>mean(Transactions))
d_20 <- d_outliers %>% filter(day==20)
View(d_20)
table(d$outliers)
998 /16917
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(forecast)
library(gtable)
d_2 <- read_excel("amarcord.xlsx",sheet = "Wires By Month")
#rearrange data
names(d_2)<- c("Month","O7","O8","O9","O10","O11","O12","O13")
d_2$index <- month(d_2$Month)
d_2[11,5] <- 396.812
d_2 [8,5] <- d_2 [8,5]-37
d_2[,2:9]<- lapply(d_2[,2:9], function(x) as.numeric(as.character(x)))
d_2[7,3] <- NA
d_2[4,7] <- NA
d_2[12,2] <- NA
all_years <- c(d_2$O7,d_2$O8,d_2$O9,d_2$O10,d_2$O11,d_2$O12,d_2$O13)
all_years <- data.frame(month=c(1:12),transactions=as.numeric(all_years),year=year)
train <- all_years[1:72,]
non_na <- train %>% filter(complete.cases(.))
non_na <- non_na[-12,]
non_na$index <- c(1:length(non_na$month))
#Getting the trend
lm_trend <- lm(transactions~month+year,non_na)
summary(lm_trend)
plot(predict(lm_trend),col="blue",type = "l",ylim=c(300,600))
lines(non_na$transactions)
non_na$trend <- predict(lm_trend)
non_na$sub <- non_na$transactions-non_na$trend
season <- non_na %>% group_by(month) %>% summarise(Season=mean(sub))
season
non_na <- left_join(non_na,season)
non_na$predict <- non_na$trend+non_na$Season
plot(non_na$transactions,type = "l")
lines(non_na$predict,col="blue")
non_na
cor(non_na$pred,non_na$transactions)^2
ggplot(data=non_na) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted"))+scale_color_manual(values=c("black", "blue"))
test <- all_years[73:84,]
test$index <- c(73:84)
test$trend <- predict(lm_trend,test)
test$sub <- test$transactions/test$trend
test <- left_join(test,season)
test$predict <-test$trend+test$Season
plot(test$transactions,type = "l", ylim=c(350,600))
lines(test$predict,col="blue")
cor(test$predict,test$transactions)^2
rms <-(1/length(test$predict))*(test$predict-test$transactions)^2
rms <- sqrt(rms)
sum(rms)
#Applied to all years
all_years$trend <-predict(lm_trend,all_years)
all_years$sub <- all_years$transactions-all_years$trend
all_years <- left_join(all_years,season)
all_years$predict <- all_years$trend+all_years$Season
all_years$index <- c(1:84)
all_years$upper <-all_years$predict +1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
all_years$lower <- all_years$predict - 1.654*sd(all_years$predict-all_years$transactions,na.rm=T)
cor(all_years$transactions,all_years$predict,use="complete.obs")^2
ggplot(data=all_years) + geom_line(aes(y=transactions,x=index,color="Actual"),size=1) +
geom_line(aes(y=predict,x=index,color="Predicted")) +
geom_ribbon(aes(ymin=lower,ymax=upper,x=index),alpha=0.2)+scale_color_manual(values=c("black", "blue"))
summary(lm_trend)
season <- non_na %>% group_by(month) %>% summarise(Season=mean(sub))
season
library(outliers)
library(readxl)
library(tidyverse)
library(lubridate)
library(writexl)
library(ggplot2)
library(stringi)
library(car)
library(outliers)
d <- read_excel("amarcord.xlsx",sheet = "November 2010 Wires")
names(d) <- c("Amount","Date","time","ID")
d$week <- week(d$Date)
d$hour <- hour(d$time)
d$minutes <- minute(d$time)
d$seconds <- second(d$time)
d$day <- day(d$Date)
d$Amount <- as.numeric(d$Amount)
mean(d$Amount)
d <- d %>% drop_na()
d <- d%>% filter(Amount<1000)
d <- d%>% filter(Amount>-10)
d_IN <- d %>% filter(stri_detect_fixed(ID,"INC"))
d_out <- d %>% filter(stri_detect_fixed(ID,"OUT"))
d_out$Amount <- d_out$Amount*1
d_out$Amount
d <- rbind(d_IN,d_out)
boxplot(Amount ~ day, data=d, main="Data reading across November")
#Cook distance
n <- nrow(d)
mod <- lm(Amount ~ day+hour, data=d)
cooksd <- cooks.distance(mod)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
str(cooksd)
influential_obs <- as.numeric(names(cooksd)[(cooksd > (4/n))])
influential_obs
d_inf <- d[influential_obs,]
d_inc <- d_inf %>% filter(stri_detect_fixed(ID,"INC"))
d_out <- d_inf %>% filter(stri_detect_fixed(ID,"OUT"))
n_occur <- data.frame(table(d_inc$ID))
repeating_freq <- n_occur[n_occur$Freq > 1,]
reapeting_freq
n_occur
d_inf <- d[influential_obs,]
tab
plot(tab$Freq,type="l")
#Outliers
Outlier <- outlier(d$Amount,opposite = T)
Outlier
#scores
scores(d$Amount)
outliers<-scores(d$Amount, type="chisq", prob=0.9)
View(outliers)
d$outliers <- scores(d$Amount, type="chisq", prob=0.9)
View(d)
table(d$outliers)
d$outliers <- as.character(d$outliers)
d_outliers <- d %>% filter(stri_detect_fixed(outliers,"TRUE"))
day <- d_outliers %>% group_by(day) %>% summarise(Transactions=sum(Amount))
View(day)
mean(day$Transactions)
plot(day,type="l")
abline(h =mean(day$Transactions) , col="red")  # add cutoff line
day <- day %>% filter(Transactions>mean(Transactions))
d_20 <- d_outliers %>% filter(day==20)
View(d_20)
View(d)
table(d$outliers)
View(d_20)
d_20 <- d_20 %>% group_by(hour) %>% group_by(minutes)
View(d_20)
View(d_20)
out <- kable(d_20) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kable_styling(full_width = F)
library(kableExtra)
out <- kable(d_20) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kable_styling(full_width = F)
out
#excel
write.xlsx(x = out, file = "suspicious_20.xlsx",
sheetName = "Data", row.names = FALSE)
install.packages("xlsx")
#excel
library(xlsx)
write.xlsx(x = out, file = "suspicious_20.xlsx",
sheetName = "Data", row.names = FALSE)
library(writexl)
#excel
writexl::write_xlsx(d_20)
#excel
tmp <-writexl::write_xlsx(d_20)
tmp
