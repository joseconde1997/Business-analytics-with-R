library(readr)
smart <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
smart2 <- smart %>% dplyr::filter(complete.cases(.))
library(tidyverse)
smart <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
smart2 <- smart %>% dplyr::filter(complete.cases(.))
d <- select(smart2,price,ppi)
d
mod <- lm(price~ppi,data=d)
summary(mod)
library(readr)
library(ggplot2)
library(tidyverse)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.8)+
geom_smooth(method = "lm", se= FALSE, color="brown",size=0.6)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.8)+
geom_smooth(method = "lm", se= FALSE, color="brown",size=1)
View(mod)
d$pred <- predict(mod,data=d)
d$resid <- d$price-d$pred
d
View(d)
stats::quantile(d$resid)
hist(d$resid,xlab = "Residuals",main = "")
paste(c("Error mean",mean(d$resid)))
cor(d$price,d$pred)
paste(c("var pred",var_pred))
var_pred <- var(d$pred)
paste(c("var pred",var_pred))
var_actual <- var(d$price)
paste(c("var actual",var_actual))
r_sqr <- var_pred/var_actual
paste(c("R-square",r_sqr))
dif <- d$pred-d$price
dif_sqr <- dif*dif
rmse <- sqrt( (1/1773)*sum(dif_sqr))
rmse
sd(d$resid)
stats::quantile(d$resid,probs=c(0.025,0.5,0.975))
library(tidyverse)
apple <- smart %>% filter(brand=="Apple")
View(apple)
apple2 <- apple %>% dplyr::filter(complete.cases(.))
View(apple2)
d <- select(smart2,weight:release)
d_app <- select(apple2,weight:release)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release,data=d)
summary(mod)
cor(smart2$weight,smart2$ram)
cor(smart2$weight,smart2$mem)
cor(smart2$weight,smart2$battery)
cor(smart2$weight,smart2$ppi)
cor(smart2$weight,smart2$size)
cor(smart2$weight,smart2$release)
cor(smart2$weight,smart2$battery)
cor(smart2$weight,smart2$mem)
cor(smart2$price)
cor(smart2$price,smart2$release)
mod_app <- lm(lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release,data=d_app)
mod_app <- lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release,data=d_app)
mod_app <- lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release,data=d_app)
summary(mod_app)
cor(smart2$price,apple2$price)
cor(apple2$price,apple2$price)
cor(apple2$price,apple2$mem)
cor(apple2$price,apple2$ra,)
cor(apple2$price,apple2$ram)
cor(apple2$price,apple2$camera)
cor(apple2$price,apple2$weight)
cor(apple2$price,apple2$vol)
cor(apple2$price,apple2$size)
cor(apple2$price,apple2$ppi)
cor(apple2$price,apple2$release)
summary(mod_app)
mean(apple2$price)
mean(smart2$price)
mean(smart2$mem)-mean(apple2$mem)
mean(smart2$ram)-mean(apple2$ram)
mean(smart2$camera)-mean(apple2$camera)
View(apple)
mean(smart2$camera+smart2$release=2016)-mean(apple2$camera+smart2$release=2016)
smart_2016 <- smart %>% filter(release="2016")
smart_2016 <- smart %>% filter(release=="2016")
smart_2016
View(smart_2016)
apple_2016 <- apple %>% filter(release=="2016")
View(apple_2016)
smart2_2016 <- smart_2016 %>% dplyr::filter(complete.cases(.))
apple2_2016 <-apple_2016 %>% dplyr::filter(complete.cases(.))
mean(apple2_2016$price)-mean(smart2_2016$price)
mean(apple2_2016$mem)-mean(smart2_2016$mem)
mean(apple2_2016$ram)-mean(smart2_2016$ram)
mean(apple2_2016$camera)-mean(smart2_2016$camera)
mean(apple2_2016$battery)-mean(smart2_2016$battery)
mean(apple2_2016$price)-mean(smart2_2016$price)
mean(apple2_2016$ram)-mean(smart2_2016$ram)
mean(apple2_2016$camera)-mean(smart2_2016$camera)
mean(apple2_2016$battery)-mean(smart2_2016$battery)
View(d)
View(smart)
ggplot(smart,aes(mem,price,fill="brand")) + geom_point(size=0.8,alpha=0.4)+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(smart,aes(mem,price)) + geom_point(size=0.8,alpha=0.4,fill=smart$brand)+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(smart,aes(mem,price)) + geom_point(size=0.8,alpha=0.4,fill="smart$brand")+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(smart,aes(mem,price,label=brand)) + geom_point(size=0.8,alpha=0.4)+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(smart,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=2,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(smart,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
app_sam <- smart %>% filter (brand=="Apple" + brand=="Samsung")
app_sam <- smart %>% filter (brand=="Apple")
samsung <- smart %>% filter (brand=="Apple")
samsung <- smart %>% filter (brand=="Samsung")
app_sam <- rbind(samsung,apple)
ggplot(app_sam,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
View(smart)
LG <- smart %>% filter (brand=="LG")
app_LG <- rbind(samsung,LG)
ggplot(app_sam,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_LG,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
app_LG <- rbind(apple,LG)
ggplot(app_LG,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
samsung <- smart %>% filter (brand=="Samsung")
samsung <- smart %>% filter (brand=="Samsung")
app_sam <- rbind(apple,samsung)
ggplot(app_sam,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
app_sam <- app_sam %>% filter(release=="2016")
ggplot(app_sam,aes(mem,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_sam,aes(ram,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_sam,aes(release,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_sam,aes(camera,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_sam,aes(ppi,price,label=brand)) + geom_text(aes(label=model,size=0.5,check_overlap=TRUE))+
geom_smooth(method="lm",se=FALSE,color="brown",size=0.6)
ggplot(app_sam, aes(price, fill = brand)) + geom_density(alpha = 0.2)
extractAIC(mod)
d <- select(smart2,weight:release,brand)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+release+as.factor(brand),data=d)
summary(mod)
View(mod)
View(smart2)
d <- select(smart2,weight:ppi,brand,release)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+as.factor(release)+as.factor(brand),data=d)
summary(mod)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+as.factor(os)+as.factor(release)+as.factor(brand),data=d)
d <- select(smart2,weight:ppi,brand,release,os)
mod <-lm(price~weight+mem+ram+camera+battery+vol+size+ppi+as.factor(os)+as.factor(release)+as.factor(brand),data=d)
summary(mod)
d <- select(smart2,price,ppi)
mod <- lm(price~ppi,data=d)
d <- select(smart2,price,ppi)
mod <- lm(price~ppi+I(ppi^2),data=d)
summary(mod)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(formula = y~pol(x,2),se=FALSE,color="brown",size=0.6)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~pol(x,2),se=FALSE,color="brown",size=0.6)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~poly(x,2),se=FALSE,color="brown",size=0.6)
ggplot(d,aes(size,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~poly(x,2),se=FALSE,color="brown",size=0.6)
ggplot(d,aes(ppi,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~poly(x,2),se=FALSE,color="brown",size=0.6)
ggplot(d,aes(size,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~poly(x,2),se=FALSE,color="brown",size=0.6)
d <- select(smart2,price,size)
ggplot(d,aes(size,price)) + geom_point(size=0.8,alpha=0.4) +
geom_smooth(method="lm",formula = y~poly(x,2),se=FALSE,color="brown",size=0.6)
summary(mod)
mod <- lm(price~size+I(size^2),data=d)
summary(mod)
#Interaction terms
mod <-lm(price~camera+battery+camera:battery,data=d)
#Interaction terms
mod <-lm(price~camera+battery+camera:battery,data=smart2)
summary(mod)
source('C:/Users/conde_000/OneDrive - IESE Business School - University of Navarra/MiM/Business analytics R/Regression analysis/Class_qmm.R', echo=TRUE)
View(qmm)
source('C:/Users/conde_000/OneDrive - IESE Business School - University of Navarra/MiM/Business analytics R/Regression analysis/Class_qmm.R', echo=TRUE)
source('C:/Users/conde_000/OneDrive - IESE Business School - University of Navarra/MiM/Business analytics R/Regression analysis/Class_qmm.R', echo=TRUE)
qmm$predict <- predict(mod_qmm,data=qmm)
View(qmm)
library(ggplot2)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"))) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"))) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"))) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
summary(mod_qmm)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
ggplot(qmm,aes(PRICE="Price (NZ dollars)",SALES="Sales(thousands)",color=I("BLACK"))) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
ggplot(qmm,aes(PRICE=,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
qmm$error <- qmm$SALES-qmm$predict
View(qmm)
sd(qmm$error)
qmm$percent_err <- qmm$error/qmm$SALES
var(qmm$predict)/var(qmm$SALES)
#Calculating the R square
var(qmm$predict)/var(qmm$SALES)
view(qmm)
View(qmm)
summary(mod_qmm)
qmm$predict <- predict(mod_qmm,data=qmm)
qmm <- read.csv("https://github.com/wdecisions/ban1/master/qmm-tn-02.csv")
qmm <- read_excel("qmm-tn-02.xlsx")
mod_qmm <-lm(SALES~PRICE,data=qmm)
summary(mod_qmm)
qmm$predict <- predict(mod_qmm,data=qmm)
qmm$error <- qmm$SALES-qmm$predict
qmm$percent_err <- qmm$error/qmm$SALES
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
#Calculating the R square
var(qmm$predict)/var(qmm$SALES)
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"))) + geom_point(aes(,xlab="Price (NZ dollars)",ylab="Sales(thousands)")alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
,xlab="Price (NZ dollars)",ylab="Sales(thousands)"
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
mod_qmm <-lm(SALES~PRICE+WEEK,data=qmm)
summary(mod_qmm)
qmm$predict <- predict(mod_qmm,data=qmm)
qmm$error <- qmm$SALES-qmm$predict
qmm$percent_err <- qmm$error/qmm$SALES
ggplot(qmm,aes(PRICE,SALES,color=I("BLACK"),xlab="Price (NZ dollars)",ylab="Sales(thousands)")) + geom_point(alpha=0.84,size=0.4) +
geom_smooth(method="lm", se=FALSE,color="brown",size=0.6)
#Calculating the R square
var(qmm$predict)/var(qmm$SALES)
View(qmm)
sd(qmm$error)
summary(mod_qmm)
mod_qmm <- lm(qmm$SALES~qmm$PRICE)
summary(mod_qmm)
1-pnorm(22.31)
pnorm(22.31)
#new data
new_data <- data.frame(PRICE=c(1.72,1.71))
predict(mod_qmm,new_data)
predict(new_data,mod_qmm)
new_data
#1 variable
mod_qmm <- lm(qmm$SALES~qmm$PRICE)
predict(mod_qmm,new_data)
#1 variable
mod_qmm <- lm(SALES~PRICE,data=qmm)
#new data
new_data <- data.frame(PRICE=c(1.72,1.71))
predict(mod_qmm,new_data)
#new data
new_data <- data.frame(PRICE=c(1.9,1.4))
predict(mod_qmm,new_data)
#new data
new_data <- data.frame(PRICE=c(1.91,1.4))
predict(mod_qmm,new_data)
#1 variable
mod_qmm <- lm(SALES~PRICE,data=qmm)
#new data
new_data <- data.frame(PRICE=c(1.91,1.4))
predict(mod_qmm,new_data)
new_data <- runif(100,min=0.9,max=2.1)
#new data
new_data <- runif(100,min=0.9,max=2.1)
new_data <- data.frame(new_data)
predict(mod_qmm,new_data)
new_data <- data.frame(PRICE=new_data)
predict(mod_qmm,new_data)
new_data
View(new_data)
new_data <- data.frame(PRICE=new_data)
View(new_data)
PRICE <- data.frame(PRICE=new_data)
predict(mod_qmm,new_data)
PRICE
View(PRICE)
new_data <- data.frame(new_data=PRICE)
predict(mod_qmm,new_data)
View(new_data)
new_data <- data.frame(PRICE==new_data)
predict(mod_qmm,new_data)
View(new_data)
new_data <- data.frame(new_data)
#new data
new_data <- runif(100,min=0.9,max=2.1)
new_data$PRICE <- data.frame(new_data)
predict(mod_qmm,new_data)
new_data$PRICE
view(new_data)
data$price <- data.frame(new_data)
#new data
new_data <- runif(100,min=0.9,max=2.1)
data$price <- data.frame(new_data)
predict(mod_qmm,new_data)
view(data)
#new data
new_data <- runif(100,min=0.9,max=2.1)
data_l <- data.frame(PRICE=new_data)
View(data_l)
predict(mod_qmm,data_l)
data_l$predict <-predict(mod_qmm,data_l)
View(data_l)
