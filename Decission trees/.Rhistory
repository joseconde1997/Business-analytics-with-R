smart <- read.csv("https://github.com/wdecisions/ba/blob/master/smartphones.csv")
smart <- read_csv("https://github.com/wdecisions/ba/blob/master/smartphones.csv")
smart <- read.csv(https://github.com/wdecisions/ba/blob/master/smartphones.csv)
smart <- read.csv("https://github.com/wdecisions/ba/blob/master/smartphones.csv")
View(smart)
smart <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
library(tidyverse)
smart2 <- smart %>% filter(complete.cases())
library(dplyr)
smart2 <- smart %>% filter(complete.cases())
smart2 <- smart %>% filter(complete.cases())
smart2 <- smart %>% filter(complete.cases(.))
d <- smart2 %>% filter(brand=="Apple"|brand=="Microsoft",size<7,
release>2010,!model %in% c("iPhone 4 CDMA","Lumia 535",
"Lumia 640 Dual SIM","Lumia 640 LTE","Lumia 640 XL")) %>%
select(brand,model,ppi,size,amoled,release,camera)
View(smart2)
d <- smart2
d$amoled <- factor(ifelse(smart2$display=="AMOLED","AMOLED","NO AMOLED"))
d <- smart2 %>% filter(brand=="Apple"|brand=="Microsoft",size<7,
release>2010,!model %in% c("iPhone 4 CDMA","Lumia 535",
"Lumia 640 Dual SIM","Lumia 640 LTE","Lumia 640 XL")) %>%
select(brand,model,ppi,size,amoled,release,camera)
d <- d %>% filter(brand=="Apple"|brand=="Microsoft",size<7,
release>2010,!model %in% c("iPhone 4 CDMA","Lumia 535",
"Lumia 640 Dual SIM","Lumia 640 LTE","Lumia 640 XL")) %>%
select(brand,model,ppi,size,amoled,release,camera)
print(d,n=22)
print(d)
plot <-ggplot(d,aes(ppi,size,color=brand)) + geom_point(size=0.6,alpha=1,position=position_jitter(width = 12,height=0.1))+
ylim(3.4,6.1)+
xlim(210,580)+
scale_color_manual(values = c("grey","orange"))
plot
plot <-ggplot(d,aes(ppi,size,color=brand)) + geom_point(size=0.6,alpha=1,position=position_jitter(width = 12,height=0.1))+
ylim(3.4,6.1)+
xlim(210,580)+
scale_color_manual(values = c("grey","orange"))+
geom_hline(yintercept = 4.9)
plot
plot <-ggplot(d,aes(ppi,size,color=brand)) + geom_point(size=0.6,alpha=1,position=position_jitter(width = 12,height=0.1))+
ylim(3.4,6.1)+
xlim(210,580)+
scale_color_manual(values = c("grey","orange"))+
geom_hline(yintercept = 4.9)+
geom_hline(xintercept=349)
plot
plot <-ggplot(d,aes(ppi,size,color=brand)) + geom_point(size=0.6,alpha=1,position=position_jitter(width = 12,height=0.1))+
ylim(3.4,6.1)+
xlim(210,580)+
scale_color_manual(values = c("grey","orange"))+
geom_hline(yintercept = 4.9)+
geom_vline(xintercept = 349)
plot
d <- as.data.frame(d)
d$brand <- factor(d$brand)
install.packages("rpart")
library(rpart)
tree <- rpart (brand~size+ppi,data=d,method="class",control = rpart.control(minsplit = 1))
tree
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
install.packages("prp")
install.packages("plot")
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
install.packages("rpart.plot")
library(rpart.plot)
prp(tree,type=4,extra=1,split.font=1,varlen=-10)
d <- select(smart2,weight:release)
d <- select(smart2,weight:release)
d$amoled <- factor(ifelse(smart2$display=="AMOLED","AMOLED","NO AMOLED"))
d$samsung <- factor(ifelse(smart2$brand=="Samsung",1,0))
d <- select(smart2,weight:release)
d$amoled <- factor(ifelse(smart2$display=="AMOLED","AMOLED","NO AMOLED"))
d$samsung <- factor(ifelse(smart2$brand=="Samsung",1,0))
d <- data.frame(d)
set.seed(123)
train_sample <- sample(1774,1395)
d_train <- d[train_sample,]
d_test <- d[-train_sample,]
set.seed(123)
tree <- rpart(amoled~.,data=d_train,method = 'class',control=rpart.control(maxdepth = 4))
tree
prp(tree,type = 4,extra = 1,split.font = 1,varlen=-10)
tree <- rpart(amoled~.,data=d_train,method = 'class')
tree
pred <- predict(tree,d_train,type = "class")
conf <- confusionMatrix(pred,d_train$amoled,dnn=c("Predicted","Actual"))
install.packages("ktable")
install.packages("kable")
conf <- confusionMatrix(pred,d_train$amoled,dnn=c("Predicted","Actual"))
install.packages("confusionMatrix")
install.packages("caret")
conf <- confusionMatrix(pred,d_train$amoled,dnn=c("Predicted","Actual"))
library(caret)
conf <- confusionMatrix(pred,d_train$amoled,dnn=c("Predicted","Actual"))
install.packages("e1071")
conf <- confusionMatrix(pred,d_train$amoled,dnn=c("Predicted","Actual"))
conf
tree<- rpart(price~.,data = d_train,method="anova")
tree
prp(tree,type = 4,extra = 1,split.font = 1,varlen=-10)
pred <- predict(tree,d_train)
table(round(predd,0))
table(round(pred,0))
node <-filter(d_train,ppi<343)
mean(node$price)
sum((d_train$price-mean(d_train$price))^2)
sum((node$price-mean(node$price))^2)
plotcp(tree)
tree$cptable
tree$cptable
plotcp(tree)
install.packages("randomForest")
library(randomForest)
library(tidyverse)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(randomForest)
smart <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
smart2 <- smart %>% filter(complete.cases(.))
d <- select(smart2,weight:release)
d$amoled <- factor(ifelse(smart2$display=="AMOLED","AMOLED","NO AMOLED"))
d$samsung <- factor(ifelse(smart2$brand=="Samsung",1,0))
d <- data.frame(d)
train_sample <- sample(1774,1395)
d_train <- d[train_sample,]
d_test <- d[-train_sample,]
set.seed(123)
rf <- randomForest(amoled ~., data=d_train,ntree=500,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=1000,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=500,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf
rf <- randomForest(amoled ~., data=d_train,ntree=10000,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=10,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=100,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=500,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
rf <- randomForest(amoled ~., data=d_train,ntree=5000,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
varImpPlot(rf,type=1)
library(tidyverse)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
smart <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
smart2 <- smart %>% filter(complete.cases(.))
d <- select(smart2,weight:release)
d$amoled <- factor(ifelse(smart2$display=="AMOLED","AMOLED","NO AMOLED"))
d$samsung <- factor(ifelse(smart2$brand=="Samsung",1,0))
d <- data.frame(d)
train_sample <- sample(1774,1395)
d_train <- d[train_sample,]
d_test <- d[-train_sample,]
set.seed(123)
boost <- boosting(amoled~.,mfinal=10,data=d_train)
install.packages("boosting")
install.packages(gbm)
install.packages("gbm)"
boosting
install.packages("gbm")
library(gbm)
boost <- boosting(amoled~.,mfinal=10,data=d_train)
install.packages("tree")
library(tree)
boost <- boosting(amoled~.,mfinal=10,data=d_train)
install.packages("adabag")
library(adabag)
boost <- boosting(amoled~.,mfinal=10,data=d_train)
pred <- predict(boost,d_test)
confusionMatrix(pred$class,d_test$amoled,dnn=c("Predicted","Actual"))
confusionMatrix(pred$class,d_test$amoled,dnn=c("Predicted","Actual"))
confusionMatrix(pred,d_test$amoled,dnn=c("Predicted","Actual"))
confusionMatrix(as.factor(pred$class),d_test$amoled,dnn=c("Predicted","Actual"))
boost <- boosting(amoled~.,mfinal=100,data=d_train)
pred <- predict(boost,d_test)
confusionMatrix(as.factor(pred$class),d_test$amoled,dnn=c("Predicted","Actual"))
