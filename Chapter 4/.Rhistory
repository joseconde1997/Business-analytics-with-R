library (readr)
smart <- read.csv(file="https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
table(smart$jack,smart$gps)
smart2 <- smart %>% dplyr::filter(complete.cases(.))
library(tidyverse)
library (readr)
smart <- read.csv(file="https://raw.githubusercontent.com/wdecisions/ba/master/smartphones.csv")
table(smart$jack,smart$gps)
smart2 <- smart %>% dplyr::filter(complete.cases(.))
smart2
summarize()
summarize(smart2)
kable(smart %>%
summarize(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
library(tidyverse)
kable(smart %>%
summarize(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart %>%
summarize(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
library(knitr)
kable(smart %>%
summarize(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart %>%
summarize(is.numeric(),funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart %>%
summarize(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart %>%
summarize(as.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart %>%
summarize_if(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
smart
kable(smart %>%
summarize_if(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
smart_num <- select(smart2,weight:release)
round(cot(smart_num),2)
round(cor(smart_num),2)
round(cor(smart_num),2)
cov(select(smart_num,weight,vol))
library(tidyselect)
cov(select(smart_num,weight,vol))
library(dplyrs)
library(dplyr)
cov(select(smart_num,weight,vol))
cov(round(select(smart_num,weight,vol)))
m <- cov(select(smart_num,weight,vol))
cor(m)
ggplot2::ggplot(smart,aes(weight,vol)) + geom_points()
library(ggplot2)
ggplot(smart,aes(weight,vol)) + geom_points()
ggplot(smart,aes(weight,vol)) + geom_point(size=3,color=I("blue"))
ggplot(smart_num,aes(weight,vol)) + geom_point(size=3,color=I("blue"))
ggplot(smart_num,aes(weight,vol)) + geom_point(size=1,color=I("blue"))
two.pca <- prcomp(select(smart_num,weight,vol),
center=TRUE,scale. = TRUE)
View(two.pca)
two.pca
summary(two.pca)
pc1 <- two.pca$x[,1]
pc2 <- two.pca$x[,2]
ggplot(data.frame(pc1,pc2), aes(pc1,pc2)) + geom_point(size=0.3,alpha=0.8)
View(two.pca)
m <- round(cov(select(smart_num,weight,vol)),2)
View(m)
m
#Application (10)
round(cov(smart_num),2)
smart_num_sd <- as_tibble(scale(smart_num))
round(smart_num_sd,2)
library(knitr)
kable(smart_num_sd %>%
summarize_if(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
kable(smart_num_sd %>%
summarize_if(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
library(tidyverse)
kable(smart_num_sd %>%
summarize_if(is.numeric,funs(mean,sd,max,median,min),na.rm=T) %>%
gather(stat,val) %>%
separate(stat,into = c("var", "stat"),sep="_") %>%
spread(stat,val) %>%
select(var,mean,sd,min,median,max),booktabs=T,digits=2)
round(cov(smart_num_sd),2)
smart.pca <- prcomp(smart_num_sd, center = TRUE,scale. = TRUE)
summary(smart.pca)
smart.pca$rotation
round(smart.pca$rotation,2)
round(head(smart.pca$x,6),2)
round(tail(smart.pca$x,6),2)
sd(smart.pca$x[,1])
var(smart.pca$x[,1])
sd(smart.pca$x[,2])
var(smart.pca$x[,2])
ggbiplot(smart.pca,varname.adjust=3,varname.size=2.5,alpha=0.005,size=0.4) +
ylim(-2,2.5)+xlim(-3,2)+ theme(axis.title = element_text(size=9))
library(ggplot2)
ggbiplot(smart.pca,varname.adjust=3,varname.size=2.5,alpha=0.005,size=0.4) +
ylim(-2,2.5)+xlim(-3,2)+ theme(axis.title = element_text(size=9))
install.packages(ggbiplot)
install.packages("ggbiplot")
library(ggbiplot)
source('C:/Users/conde_000/OneDrive - IESE Business School - University of Navarra/MiM/Business analytics R/Chapter 4/Principal_components.R', echo=TRUE)
install.packages("devtools")
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
ggbiplot(smart.pca,varname.adjust=3,varname.size=2.5,alpha=0.005,size=0.4) +
ylim(-2,2.5)+xlim(-3,2)+ theme(axis.title = element_text(size=9))
ggbiplot(smart.pca,varname.adjust=3,varname.size=2.5,alpha=1,size=0.4) +
ylim(-2,2.5)+xlim(-3,2)+ theme(axis.title = element_text(size=9))
ggbiplot(smart.pca,varname.adjust=3,varname.size=2.5,alpha=0.05,size=0.4) +
ylim(-2,2.5)+xlim(-3,2)+ theme(axis.title = element_text(size=9))
library(tidyverse)
smart_num <- select(smart2,brand,weight:release) %>%
dplyr::filter(brand!="Nvidia")
firms <- smart_num %>%
group_by(brand) %>%
dplyr::summarise(weight = mean(weight),mem=mean(mem),ram=mean(ram),
camera=mean(camera),battery=mean(battery),price=mean(price),
vol=mean(vol),size=mean(size),ppi=mean(ppi),release=mean(release))
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
firms <- smart_num %>%
group_by(brand) %>%
dplyr::summarise(weight = mean(weight),mem=mean(mem),ram=mean(ram),
camera=mean(camera),battery=mean(battery),price=mean(price),
vol=mean(vol),size=mean(size),ppi=mean(ppi),release=mean(release))
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
firms
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
firms
#list the top brands by average price
firms %>% dplyr::filter(price>300) %>% arrange(-price)
#use brands as rownames
firms <- column_to_rownames(firms,var="brand")
firms
brand.pca <- prcomp(firms,center= TRUE,scale. = TRUE)
brand.pca <- prcomp(firms,center= TRUE,scale. = TRUE)
ggbiplot(brand.pca,labels = rownames(firms),labels.size = 1.5,size=0.5) + ylim(-1.5,3.9)+
xlim(-2.5,3) + theme(axis.title = element_text(size=9))
library(ggbiplot)
ggbiplot(brand.pca,labels = rownames(firms),labels.size = 1.5,size=0.5) + ylim(-1.5,3.9)+
xlim(-2.5,3) + theme(axis.title = element_text(size=9))
ggbiplot(brand.pca,labels = rownames(firms),labels.size = 1.5,size=0.5) + ylim(-1.5,3.9)+
xlim(-2.5,3) + theme(axis.title = element_text(size=14))
ggbiplot(brand.pca,labels = rownames(firms),labels.size = 3,size=0.5) + ylim(-1.5,3.9)+
xlim(-2.5,3) + theme(axis.title = element_text(size=9))
ggbiplot(brand.pca,labels = rownames(firms),labels.size = 2,size=0.5,check_overlap=TRUE) + ylim(-1.5,3.9)+
xlim(-2.5,3) + theme(axis.title = element_text(size=9))
