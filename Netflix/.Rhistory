library(readxl)
d <- read_excel("netflix_30.xlsx")
View(d)
library(arules)
rules <- apriori(d,parameter = list(support=0.15,confidence=0.15,minlen=2))
rules
summary(rules)
inspect(rules[5:7])
rules <- apriori(d$movieId,parameter = list(support=0.15,confidence=0.15,minlen=2))
summary(d)
itemFrequency(d[,1])
d <- as.matrix( read_excel("netflix_30.xlsx"))
summary(d)
rules <- apriori(d,parameter = list(support=0.15,confidence=0.15,minlen=2))
library(tidyverse)
d <- column_to_rownames(d,var="User")
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <- column_to_rownames(d,var="User")
d <- column_to_rownames(d,var="userID")
d <- column_to_rownames(d,var="userId")
d <- column_to_rownames(d,loc=1)
d <- column_to_rownames(d,'userId')
library(tidyverse)
library(arules)
library(recommenderlab)
sparse <- read.csv("https://raw.githubusercontent.com/wdecisions/ba/master/sparse.csv")
sparse[1:10,5:9]
movies <- read.transactions("https://raw.githubusercontent.com/wdecisions/ba/master/basket.csv",sep=",",quote="")
summary(movies)
inspect(movies[5:6,])
itemFrequency(movies[,4:7])
itemFrequencyPlot(movies,support=0.25)
image(movies[1:200,1:200])
rules <- apriori(movies,parameter = list(support=0.15,confidence=0.15,minlen=2))
summary(rules)
inspect(rules[5:7])
inspect(rules[1:5])
inspect(sort(rules,by="lift")[c(4:5,7,9,10)])
rules2 <- subset(rules,!items %in% c("Pirates of the Caribbean: The Curse of the Black Pearl",
"Lord of the Rings: The Fellowship of the Ring",
"50 First Dates","Along Came Polly", "What Women Want"))
inspect(rules2[1:10,])
rare <- subset(rules,items %in%  "Napoleon Dynamite")
rare
inspect(rare)
#recommender lab
d <- sparse
d <- column_to_rownames(d,var="User")
d <- as.matrix(d)
d <- as(d,"binaryRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
x <- sparse[10,]
x <- x[,colSums(x != 0)>0]
t(x)
pred_u83 <- predict(Rec.user,d[10,],n=10)
as(pred_u83,"list")
pred_u6 <- predict(Rec.user,d["6",],n=10)
as(pred_u6,"list")
rm(list = ls())
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <- column_to_rownames(d,'userId')
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
View(d)
summary(d)
d$data
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
View(Rec.user)
RRec.user
Rec.user
pred <- predict(Rec.user,d[10,])
as(pred,"list")
d[10,]
pred <- predict(Rec.user,d[10,],n=10)
as(pred,"list")
pred <- predict(Rec.user,d["191",],n=10)
pred <- predict(Rec.user,d,n=10)
as(pred,"list")
d <- column_to_rownames(d,var="User")
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <- column_to_rownames(d,var="User")
d <- column_to_rownames(d,var="userId")
str(d)
d$userId <- as.factor(d$userId)
str(d)
d <- column_to_rownames(d,var="userId")
d <- as.data.frame( read_excel("netflix_30.xlsx"))
str(d)
d$userId <- as.factor(d$userId)
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
pred <- predict(Rec.user,d,n=10)
as(pred,"list")
View(Rec.user)
View(d)
str(d)
d@data
d <- as.data.frame( read_excel("netflix_30.xlsx"))
str(d)
d$userId <- as.factor(d$userId)
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
pred <- predict(Rec.user,d,n=10)
as(pred,"list")
library(readxl)
library(arules)
library(tidyverse)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
str(d)
d$userId <- as.factor(d$userId)
View(d)
d$rating <- as.factor(d$rating)
#linear model
mod <-lm(rating~.,d)
summary(mod)
str(d)
#linear model
mod <-lm(rating~userId+movieId,d)
summary(mod)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
str(d)
d$userId <- as.factor(d$userId)
d$rating <-(d$rating)
#linear model
mod <-lm(rating~userId+movieId,d)
summary(mod)
table(d$title)
table(d$movieId)
d$movieId <- as.factor(d$movieId)
#linear model
mod <-lm(rating~userId+movieId,d)
summary(mod)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
#
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <- column_to_rownames(d,var="userId")
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
x <- d
#
d <- as.data.frame( read_excel("netflix_30.xlsx"))
x <- d
x <- x[,colSums(x!=0)>0]
t(x)
x <- d[1,]
x <- x[,colSums(x!=0)>0]
t(x)
t <- d%>% group_by(d$movieId)
View(t)
t <- d%>% group_by(d$userId)
d <- d %>% filter(d$userId==191)
View(d)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
x <- d[1,]
x <- x[,colSums(x!=0)>0]
t(x)
#Col data
d_191 <- d %>% filter(d$userId==191)
d_430 <- d %>% filter(d$userId==430)
d_638 <- d %>% filter(d$userId==638)
d_682 <- d %>% filter(d$userId==682)
View(d_191)
View(d_430)
View(d_638)
View(d_682)
t(d_191)
#
d <- as.data.frame( read_excel("netflix_30.xlsx"))
t(d)
d <-t(d)
d
d <-as.data.frame(t(d))
View(d)
d <-(t(d))
d <-(t(d))
d
d[1]
d,[1]
d[,1]
d[,2]
d[,3]
#
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <-(t(d))
View(d)
d <- column_to_rownames(d,var="userId")
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
pred <- predict(Rec.user,d,n=10)
as(pred,"list")
#
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d <- column_to_rownames(d,var="userId")
d <- as.matrix(d)
d <- as(d,"realRatingMatrix")
Rec.user <- Recommender(d,"UBCF",param=list(method="Jaccard"))
Rec.user
pred <- predict(Rec.user,d,n=10)
as(pred,"list")
d <- as.data.frame( read_excel("netflix_30.xlsx"))
#
d <- as.matrix(d)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
#
mat <- as.matrix(d)
trans <- as(mat,"transaction")
trans <- as(mat,"transactions")
d <- as.data.frame( read_excel("netflix_30.xlsx"))
#
D
#
D
#
d
#
movieId <- d$movieId
rating <-d$rating
d <- d%>% group_by(userId) %>% rating
d <- d%>% group_by(userId) %>% summarise(rating)
d <- d%>% group_by(userId)
View(d)
d <- d%>% group_by(userId)
View(d)
View(d_191)
title <- d$title
d_191 <- d%>% filter(d$movieId==191)
d_191 <- d %>% filter(d$movieId==191)
d_191 <- d %>% filter(d$userId==191)
str(d)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
str(d)
d_191 <- d %>% filter(d$userId==191)
d_191 <- d %>% filter(d$userId==191)
d_430 <- d %>% filter(d$userId==430)
d_638 <- d %>% filter(d$userId==638)
d_682 <- d %>% filter(d$userId==682)
View(d_191)
d
title_191 <- d_191$title
d_191 <- column_to_rownames(d_191,"titles")
d_191 <- column_to_rownames(d_191,"title")
d_191
d_430 <- column_to_rownames(d_430,"title")
d_638 <-  column_to_rownames(d_638,"title")
d_682 <-  column_to_rownames(d_682,"title")
d_430
d_682
d_638
data <- rbind(id_191=d_191$rating,id_430=d_430$rat)
d <- as.data.frame(c(1:199))
View(d)
d1 <- as.data.frame(c(200:215))
d2 <- rbind(d,d1)
d2 <- cbind(d,d1)
d2 <- rbind(d,d1)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
d %>% group_by(title)
title <- d %>% group_by(title)
View(title)
title <- d %>% group_by(title) %>% group_by(rating)
View(title)
title <- d %>% group_by(title) %>% group_by(userId)
View(title)
View(title)
View(d_191)
titles <- d$title
titles
View(d_191)
t(d)
t <- t(d)
t[1]
t[1,]
t[2,]
t[3,]
t[4,]
t <- as.data.frame(t)
View(t)
t <- rownames_to_column(t,var="title")
t
View(t)
t <- t(d)
t <- as.data.frame(t)
t <- rownames_to_column(d,var="userId")
t <- rownames_to_column(t,var="userId")
t
t <- t(d)
t <- as.data.frame(t)
View(t)
d <- as.data.frame( read_excel("netflix_30.xlsx"))
library(readxl)
library(arules)
library(tidyverse)
library(recommenderlab)
d <- read_excel("netflix_30.xlsx")
str(d)
d %>% summarise(n_users=n_distinct(userId),
n_movies=n_distinct(movieId),
min_rating=min(rating),
max_rating=max(rating))
d %>% group_by(userId) %>%
summarise(count=n()) %>%
arrange(-count)
d <- read_excel("netflix_1m.xlsb")
d <- read_excel("netflix_1m.xlsx")
d <- read_excel("netflix_1m.xlsb")
d <- readBin("netflix_1m.xlsb")
d <- read_excel("netflix_1m.xlsx")
d <- read_excel("netflix_1m.xlsx")
d %>% summarise(n_users=n_distinct(userId),
n_movies=n_distinct(movieId),
min_rating=min(rating),
max_rating=max(rating))
d %>% group_by(userId) %>%
summarise(count=n()) %>%
arrange(-count)
#collaborative filtering
ratings <- d %>%
select(title,userId,rating) %>%
spread(title,rating) %>%
column_to_rownames(var="userId") %>%
as.matrix
ratings
View(ratings)
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
library(readxl)
library(arules)
library(tidyverse)
library(recommenderlab)
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
ratings <- ratings %>% as("realRatingMatrix")
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
pred <- predict(Rec.user,ratings[3,],n=2)
#pred
pred <- predict(Rec.user,ratings[3,],type=c("ratings"))
as(pred,list)
as(pred,"list")
View(as(pred,"list"))
mv <- (as(pred,"list"))
View(mv$`49`)
as(pred,"list")
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
pred <- predict(Rec.user,ratings[3,],n=2)
as(pred,"list")
library(readxl)
library(arules)
library(tidyverse)
library(recommenderlab)
d <- read_excel("netflix_1m.xlsx")
str(d)
d %>% summarise(n_users=n_distinct(userId),
n_movies=n_distinct(movieId),
min_rating=min(rating),
max_rating=max(rating))
d %>% group_by(userId) %>%
summarise(count=n()) %>%
arrange(-count)
#collaborative filtering
ratings <- d %>%
select(title,userId,rating) %>%
spread(title,rating) %>%
column_to_rownames(var="userId") %>%
as.matrix
ratings <- ratings %>% as("realRatingMatrix")
View(ratings)
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
pred <- predict(Rec.user,ratings[3,],n=2)
as(pred,"list")
#pred
pred <- predict(Rec.user,ratings[3,],type=c("ratings"))
mv <- (as(pred,"list"))
View(mv$`49`)
library(readxl)
library(arules)
library(tidyverse)
library(recommenderlab)
d <- read_excel("netflix_1m.xlsx")
str(d)
str(d)
View(d)
cor(d)
str(d)
d %>% mutate(title,as.numeric)
d %>% mutate(title,as.factor)
d %>% summarise(n_users=n_distinct(userId),
n_movies=n_distinct(movieId),
min_rating=min(rating),
max_rating=max(rating))
d %>% group_by(userId) %>%
summarise(count=n()) %>%
arrange(-count)
#collaborative filtering
ratings <- d %>%
select(title,userId,rating) %>%
spread(title,rating) %>%
column_to_rownames(var="userId") %>%
as.matrix
ratings <- ratings %>% as("realRatingMatrix")
View(ratings)
#collaborative filtering
ratings <- d %>%
select(title,userId,rating) %>%
spread(title,rating) %>%
column_to_rownames(var="userId") %>%
as.matrix
View(ratings)
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
ratings <- ratings %>% as("realRatingMatrix")
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
#recommender
Rec.user <- Recommender(ratings,"UBCF",param=list(method="Pearson"))
pred <- predict(Rec.user,ratings[3,],n=2)
as(pred,"list")
#pred
pred <- predict(Rec.user,ratings[3,],type=c("ratings"))
mv <- (as(pred,"list"))
View(mv$`49`)
