train+test
d$SALES[train+test]
View(d)
d$SALES[84:104]
d$SALES[train+1:104]
plot(pred,d$SALES[(train+1):train+test])
d$SALES[(train+1):104]
length(d$SALES[(train+1):104])
length(pred)
plot(pred,d$SALES[(train+1):train+test])
x <- pred
y <- d$SALES[(train+1:train+test)]
y <- d$SALES[(train+1):train+test]
plot(pred,d$SALES[train+1:test,])
length(d$SALES[(train+1):104])
length(d$SALES[(train+1):test+train])
length(d$SALES[(train+1):(test+train)])
y <- d$SALES[(train+1):(train+test)]
plot(x,y)
plot(x,y,bty="l")
plot(x,y,bty="l")
cor(x,y)^2
#lag
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+lag(SALES),d[1:train,])
summary(mod)
#lag
mod <- lm(SALES~lag(SALES),d[1:train,])
summary(mod)
#lag
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+lag(SALES)+as.factor(XMAS)+as.factor(HOLIDAY)+as.factor(SUMMER),d[1:train,])
summary(mod)
pred <- predict(mod,d[train+1:test,])
pred <- predict(mod,d[train+1])
library(forecast)
#lag
d_filter <- filter(d,d$WEEK=5)
#lag
d_filter <- d %>% filter(WEEKMONTH!=5)
View(d_filter)
d.ts <- ts(d$SALES,frequency = 4)
d.ts <- ts(d$SALES,frequency = 12)
d.ts
d.ts <- ts(d_filter$SALES,frequency = 12)
d.ts
View(d)
View(d_filter)
Acf(d.ts,lag.max=1,main="",bty="l")
Acf(d.ts,lag.max=4,main="",bty="l")
Acf(d.ts,lag.max=12,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
mod1 <- lm(SALES~lag,d_filter)
d_filter$lag <- lag(d$SALES)
d_filter$lag <- lag(d_filter$SALES)
mod1 <- lm(SALES~lag,d_filter)
View(d)
View(d_filter)
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
plot(arm$fitted,col="blue",lwd=1)
plot(d.ts,bty="l")
line(arm$fitted,col="blue",lwd=1)
lines(arm$fitted,col="blue",lwd=1)
cor(d.ts,arm$fitted)^2
ntrain <- train
ntest <- test
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
ntrain <- length(d_filter$SALES)
ntrain <- length(d_filter$SALES)*0.8
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
ntrain+ntest
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
arm <- Arima(d.ts,order=c(1,0,0))
arm
arm <- Arima(train.ts,order=c(1,0,0))
arm
pred <- forecast(test.ts,h=ntest)
cor(test.ts,pred$mean)^2
cor(test.ts,pred$mean)^2
pred
pred$mean
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- Arima(train.ts,order=c(1,0,0))
pred <- forecast(test.ts,h=ntest)
test.ts
pred$mean
pred <- forecast(test.ts,h=19)
cor(test.ts,pred$mean)^2
#naive
naive.pred <- naive(train.ts,h=ntest)
library(readxl)
library(tidyverse)
library(forecast)
#naive
naive.pred <- naive(train.ts,h=ntest)
snaive.pred <- snaive(train.ts,h=ntest)
summary(snaive.pred)
plot(d.ts,bty="l")
lines(naive.pred,col="blue",lwd=2)
lines(naive.pred$mean,col="blue",lwd=2)
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
library(readxl)
library(tidyverse)
library(forecast)
d <- read_excel("guarini.xlsx",sheet = "Data")
train <- round(104*0.8)
test <- length(d$SALES)-train
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH),d[1:train,])
summary(mod)
pred <- predict(mod,d[train+1:test,])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(x,y,bty="l")
#lag
d_filter <- d %>% filter(WEEKMONTH!=5)
d_filter$lag <- lag(d_filter$SALES)
d.ts <- ts(d_filter$SALES,frequency = 12)
d.ts
Acf(d.ts,lag.max=12,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
cor(d.ts,arm$fitted)^2
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
arm <- Arima(train.ts,order=c(1,0,0))
arm
pred <- forecast(test.ts,h=ntest)
cor(test.ts,pred$mean)^2
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
arm
d.ts
d.ts[8,]
d.ts[,1]
d.ts[1]
d.ts[1:96]
pred
lines(pred$mean,col="red",lwd=1)
lines(pred$fitted,col="red",lwd=1)
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred$fitted,col="red",lwd=1)
library(readxl)
library(tidyverse)
library(forecast)
d <- read_excel("guarini.xlsx",sheet = "Data")
train <- round(104*0.8)
test <- length(d$SALES)-train
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH),d[1:train,])
summary(mod)
pred <- predict(mod,d[train+1:test,])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(x,y,bty="l")
#lag
d_filter <- d %>% filter(WEEKMONTH!=5)
d_filter$lag <- lag(d_filter$SALES)
d.ts <- ts(d_filter$SALES,frequency = 12)
d.ts
Acf(d.ts,lag.max=12,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred$fitted,col="red",lwd=1)
cor(d.ts,arm$fitted)^2
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
arm <- Arima(train.ts,order=c(1,0,0))
arm
pred <- forecast(test.ts,h=ntest)
cor(test.ts,pred$mean)^2
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred$fitted,col="red",lwd=1)
cor(d.ts,arm$fitted)^2
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
arm <- Arima(train.ts,order=c(1,0,0))
arm
pred <- forecast(test.ts,h=ntest)
cor(test.ts,pred$mean)^2
cor(x,y)^2
plot(x,y,bty="l")
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
pred
summary(pred)
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
View(d_filter)
d <- read_excel("guarini.xlsx",sheet = "Data")
d_filter$lag <- lag(d_filter$SALES)
View(d)
d$lag <- lag(d$SALES)
View(d)
d.ts <- ts(d_filter$SALES,frequency = 4)
d.ts
View(d_filter)
Acf(d.ts,lag.max=12,main="",bty="l")
Acf(d.ts,lag.max=4,main="",bty="l")
Acf(d.ts,lag.max=1,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
library(readxl)
library(tidyverse)
library(forecast)
Acf(d.ts,lag.max=4,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred$fitted,col="red",lwd=1)
cor(d.ts,arm$fitted)^2
ntrain <- round(length(d_filter$SALES)*0.8)
ntest <- length(d_filter$SALES)-ntrain
train.ts <- window(d.ts,start=c(1,1),end=c(1,ntrain))
test.ts <- window(d.ts,start=c(1,ntrain+1),end=c(1,ntrain+ntest))
arm <- auto.arima(train.ts,seasonal = T)
pred <- forecast(arm,h=ntest)
arm
cor(test.ts,pred$mean)^2
arm <- Arima(train.ts,order=c(1,0,0))
arm
pred <- forecast(test.ts,h=ntest)
cor(test.ts,pred$mean)^2
d.ts
pred <- predict(mod,d[train+1:test,])
x
lines(arm$fitted,col="blue",lwd=1)
lines(pred,col="red",lwd=1)
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred,col="red",lwd=1)
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(d$SALES)
plot(d$SALES,type = "l")
plot(pred,col="blue",type = "l")
lines(pred,col="blue",type = "l")
plot(d$SALES,type = "l")
lines(pred,col="blue",type = "l")
pred <- predict(mod,d[(train+1):test,])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(d$SALES,type = "l")
lines(pred,col="blue",type = "l")
plot(y,type = "l")
lines(pred,col="blue",type = "l")
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(y,type = "l")
lines(pred,col="blue",type = "l")
View(d_filter)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(y,type = "l")
lines(pred,col="blue",type = "l")
d$lag2 <- lag(d$lag)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2,d[1:train,])
summary(mod)
d$lag3 <- lag(d$lag2)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2,d[1:train,])
summary(mod)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2+lag3,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(y,type = "l")
lines(pred,col="blue",type = "l")
plot(x,y,bty="l")
#lag
d_filter <- d %>% filter(WEEKMONTH!=5)
d_filter$lag <- lag(d_filter$SALES)
d.ts <- ts(d_filter$SALES,frequency = 4)
d.ts
Acf(d.ts,lag.max=4,main="",bty="l")
mod1 <- lm(SALES~lag,d_filter)
summary(mod1)
arm <- arima(d.ts,order=c(1,0,0))
arm
arm <- auto.arima(d.ts,seasonal = T)
arm
plot(d.ts,bty="l")
lines(arm$fitted,col="blue",lwd=1)
lines(pred,col="red",lwd=1)
lines(arm$fitted,col="blue",lwd=1)
lines(pred,col="red",lwd=1)
cor(d.ts,arm$fitted)^2
View(d)
d$lag3 <- lag(d$PROMO)
train <- round(104*0.8)
test <- length(d$SALES)-train
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2+lag3,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
d$lag3 <- lag(d$HOLIDAY)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2+lag3,d[1:train,])
mod_lag <- lm()
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+PROMO+lag+lag2+lag3,d[1:train,])
summary(mod)
mod <- lm(SALES~MONTH+as.factor(WEEKMONTH)+as.factor(HOLIDAY)+as.factor(SUMMER)+lag+lag2,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(y,type = "l")
lines(pred,col="blue",type = "l")
d_5 <- d %>% filter(WEEKMONTH==5)
View(d_5)
d_mean <- d %>% group_by(WEEKMONTH) %>% mean(SALES)
d_mean <- d %>% group_by(WEEKMONTH) %>% summarize(mean(SALES))
View(d_mean)
plot(d$SALES)
plot(d$SALES,type="l")
d_mean_month <- d %>% group_by(MONTH) %>% summarize(mean(SALES))
View(d_mean_month)
plot(d_mean_month,type="l")
View(d_mean_month)
View(d_mean_month)
ggplot(d_mean_month,aes(MONTH,mean(SALES),fill=MONTH)) + geom_line()
names(d_mean_month)<- c("MONTH","SALES")
ggplot(d_mean_month,aes(MONTH,SALES,fill=MONTH)) + geom_line()
ggplot(d_mean_month,aes(MONTH,SALES,fill=MONTH)) + geom_point()
View(d_filter)
View(d_mean)
View(d_mean)
cor(d$HOLIDAY,d$SUMMER)
cor(d$HOLIDAY,d$XMAS)
cor(d)
summarize(cor(d))
View(d)
View(round(cor(d_filter),2))
cor(d$lag,d$lag2)
cor(d$lag,d$lag2,na.omit())
mod <- lm(SALES~as.factor(MONTH)+as.factor(WEEKMONTH)+as.factor(HOLIDAY)+as.factor(SUMMER)+lag+lag2,d[1:train,])
summary(mod)
pred <- predict(mod,d[(train+1):(train+test),])
x <- pred
y <- d$SALES[(train+1):(train+test)]
cor(x,y)^2
plot(y,type = "l")
lines(pred,col="blue",type = "l")
error <- x-y
error
mean(error)
abline(d$SALES~d$WEEK)
plot(d$SALES,type="l")
abline(d$SALES~d$WEEK)
abline(lm(d$SALES~d$WEEK))
cor(d[,c(3,6,7,8)])
d_numeric <- dplyr::select_if(d, is.numeric)
View(d_numeric)
cor(d_numeric)
cor(d_numeric,use = "pairwise.complete.obs")
d
# Guarini Sales Trend
# libraries
library(readxl)
library(tidyverse)
# data
d <- read_xlsx("guarini.xlsx", sheet="Data")
# plot
plot(d$SALES, type="l")
abline(lm(d$SALES ~d$WEEK))
# correlation
cor(d[, c(3,6,7,8)])
# weekmonth effect
d %>% group_by(WEEKMONTH) %>%
summarise(sales=mean(SALES))
# regression 1
d$WEEKMONTH <- factor(d$WEEKMONTH)
reg1 <- lm(SALES ~ WEEK+WEEKMONTH+XMAS+SUMMER+HOLIDAY, data=d)
summary(reg1)
# actual vs prediction
plot(d$SALES,type="l")
lines(predict(reg1),type="l",col="blue")
# lagged variables
lagged <- data.frame(d$SALES,lag(d$SALES,1),lag(d$SALES,2),lag(d$SALES,3))
cor(lagged,use = "pairwise.complete.obs")
# regression 2 (lagged variables)
reg2 <- lm(SALES ~ WEEKMONTH+XMAS+SUMMER+HOLIDAY+
lag(SALES,1)+lag(SALES,2)+lag(SALES,3), data=d)
summary(reg2)
# actual vs prediction
plot(d$SALES[-c(1:3)],type="l")
lines(predict(reg2),type="l",col="blue")
# forecast (example remove last obs SEP and OCT for testing)
train <- d[1:95,] # filter first 95 weeks
test <- d[96:104,] # filter last  9 weeks
reg3 <- lm(SALES ~ WEEK+WEEKMONTH+XMAS+SUMMER+HOLIDAY, data=train)
summary(reg3)
pred <- predict(reg3, test)
plot(test$SALES, type="l")
lines(pred,type="l",col="blue")
# plot
plot(d$SALES, type="l")
abline(lm(d$SALES ~d$WEEK))
# correlation
cor(d[, c(3,6,7,8)])
# weekmonth effect
d %>% group_by(WEEKMONTH) %>%
summarise(sales=mean(SALES))
# regression 1
d$WEEKMONTH <- factor(d$WEEKMONTH)
reg1 <- lm(SALES ~ WEEK+WEEKMONTH+XMAS+SUMMER+HOLIDAY, data=d)
summary(reg1)
# actual vs prediction
plot(d$SALES,type="l")
lines(predict(reg1),type="l",col="blue")
# lagged variables
lagged <- data.frame(d$SALES,lag(d$SALES,1),lag(d$SALES,2),lag(d$SALES,3))
cor(lagged,use = "pairwise.complete.obs")
# regression 2 (lagged variables)
reg2 <- lm(SALES ~ WEEKMONTH+XMAS+SUMMER+HOLIDAY+
lag(SALES,1)+lag(SALES,2)+lag(SALES,3), data=d)
summary(reg2)
# actual vs prediction
plot(d$SALES[-c(1:3)],type="l")
lines(predict(reg2),type="l",col="blue")
# forecast (example remove last obs SEP and OCT for testing)
train <- d[1:95,] # filter first 95 weeks
test <- d[96:104,] # filter last  9 weeks
reg3 <- lm(SALES ~ WEEK+WEEKMONTH+XMAS+SUMMER+HOLIDAY, data=train)
summary(reg3)
pred <- predict(reg3, test)
plot(test$SALES, type="l")
lines(pred,type="l",col="blue")
