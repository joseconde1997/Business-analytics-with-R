summary(mod)
#KNN
d_IDless <- d[,2:15]
CHURN <- ifelse(d_IDless$CHURN==1,"CHURN","No_Churn")
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
d_IDless$CHURN <- CHURN
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
pred <-knn(train = d_train[,-14],test = d_test[,-14],cl=d_train[,14],k=20)
library(randomForest)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
CHURN <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
d_IDless$CHURN <- CHURN
View(d_IDless)
#KNN
d_IDless <- d[,2:15]
d_IDless$CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
#KNN
d_IDless <- d[,2:15]
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
d_IDless$CHURN <- CHURN
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
rf
pred <- predict(rf,d_test)
CrossTable(x=pred,y=d_test$CHURN,prop.chisq = F)
ConfusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual")
ConfusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
ConfusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
library(caret)
library("caret")
install.packages("caret")
install.packages("caret")
library(caret)
ConfusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
confusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
pred <- predict(rf,d_test)
library(readxl)
library(tidyverse)
library(class)
library(descr)
library(knitr)
library(readr)
library(tibble)
library(randomForest)
library(caret)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
install.packages("tree")
library(tree)
#boosted trees
boost <- boosting(CHURN~.,data=d_train,mfinal=10,data=d_train)
install.packages("mlbench")
library(mlbench)
#boosted trees
boost <- boosting(CHURN~.,data=d_train,mfinal=10,data=d_train)
library(readxl)
library(tidyverse)
library(class)
library(descr)
library(knitr)
library(readr)
library(tibble)
library(randomForest)
library(caret)
library(tree)
library(mlbench)
library(tidyverse)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(adabag)
#boosted trees
boost <- boosting(CHURN~.,data=d_train,mfinal=10,data=d_train)
#boosted trees
boost <- boosting(CHURN~.,mfinal=10,data=d_train)
d_train
library(readxl)
library(tidyverse)
library(class)
library(descr)
library(knitr)
library(readr)
library(tibble)
library(randomForest)
library(caret)
library(tree)
library(mlbench)
library(tidyverse)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(adabag)
d <- read_excel("omicron.xlsx",sheet = "Data")
mod <- lm(CHURN~.-ID,d)
summary(mod)
#linear regression
mod <- lm(CHURN~ACLENGTH+INTPLAN+DATAPLAN+as.factor(DATAGB)+OMMIN+OMCALL+OTMIN+OTCALL+NGMIN+IMIN+as.factor(ICALL)+as.factor(CUSCALL),d)
summary(mod)
#KNN
d_IDless <- d[,2:15]
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
d_IDless$CHURN <- CHURN
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
pred <-knn(train = d_train[,-14],test = d_test[,-14],cl=d_train[,14],k=20)
actual <- d_test[,11]
CrossTable(x=prediction,y=actual,prop.chisq = F)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=500,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
#boosted trees
boost <- boosting(CHURN~.,mfinal=10,data=d_train)
d_train
d_IDless <- d[,2:15]
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:13)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
View(d_IDless)
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(select(d_IDless,1:14)))
d_IDless <- d_IDless %>% filter(complete.cases(.))
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(d_IDless))
d_IDless <- d_IDless %>% filter(complete.cases(.))
View(d_IDless)
d_IDless <- d[,2:15]
CHURN  <- ifelse(d_IDless$CHURN==1,1,0)
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(d_IDless))
d_IDless <- d_IDless %>% filter(complete.cases(.))
View(d_IDless)
quantile(d_IDless$CHURN)
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
pred <-knn(train = d_train[,-14],test = d_test[,-14],cl=d_train[,14],k=20)
pred <-knn(train = d_train[,-14],test = d_test[,-14],cl= d_train[,14],k=20)
pred <-knn(train = d_train[,-14],test = d_test[,-14],class= d_train[,14],k=20)
pred <-knn(train = d_train[,-14],test = d_test[,-14],cl= d_train[,14],k=20)
train <- d_train[,-14]
test <- d_test[,-14]
cl <- d_train[14]
pred <-knn(train,test,cl,k=20)
View(cl)
library(class)
install.packages("kknn")
library(kknn)
pred <-knn(train,test,cl,k=20)
cl <- d_train[,14]
pred <-knn(train,test,cl,k=20)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=100,importance=T)
pred <- predict(rf,d_test)
pred
#KNN
d_IDless <- d[,2:15]
d_IDless$CHURN  <- ifelse(d_IDless$CHURN==1,"Churn","NO_CHURN")
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(d_IDless[1:13]))
d_IDless <- d_IDless %>% filter(complete.cases(.))
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
train <- d_train[,-14]
test <- d_test[,-14]
cl <- d_train[,14]
pred <-knn(train,test,cl,k=20)
actual <- d_test[,11]
CrossTable(x=prediction,y=actual,prop.chisq = F)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=100,importance=T)
pred <- predict(rf,d_test)
View(d_train)
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[train,]
d_test <- d_IDless[-train,]
training <- sample(5000,5000*0.8)
d_train <- d_IDless[training,]
d_test <- d_IDless[-training,]
train <- d_train[,-14]
CHURN  <- ifelse(d_IDless$CHURN==1,"Churn","NO_CHURN")
d_IDless$CHURN <- CHURN
d_IDless <- d[,2:15]
CHURN  <- ifelse(d_IDless$CHURN==1,"Churn","NO_CHURN")
d_IDless$DATAGB <- ifelse(d_IDless$DATAGB==0,0,1)
d_IDless <- as_tibble(scale(d_IDless[1:13]))
d_IDless <- d_IDless %>% filter(complete.cases(.))
d_IDless$CHURN <- CHURN
View(d_IDless)
set.seed(123)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[training,]
d_test <- d_IDless[-training,]
train <- d_train[,-14]
test <- d_test[,-14]
cl <- d_train[,14]
pred <-knn(train,test,cl,k=20)
actual <- d_test[,11]
CrossTable(x=prediction,y=actual,prop.chisq = F)
# randm forest
rf <- randomForest(CHURN~.,data=d_train,n_tree=100,importance=T)
# randm forest
rf <- randomForest(as.factor(CHURN)~.,data=d_train,n_tree=100,importance=T)
pred <- predict(rf,d_test)
confusionMatrix(pred,d_test$CHURN,dnn=c("Predicted","Actual"))
actual <- d_train[,14]
actual$pred <- pred
View(actual)
# randm forest
rf <- randomForest(as.factor(CHURN)~.,data=d_train,n_tree=500,importance=T)
pred <- predict(rf,d_test)
actual <- d_train[,14]
actual$pred <- pred
View(actual)
#boosted trees
boost <- boosting(as.factor(CHURN)~.,mfinal=10,data=d_train)
#boosted trees
boost <- boosting(CHURN~.,mfinal=10,data=d_train)
View(d_IDless)
#KNN
d_IDless <- d[,2:15]
View(d_IDless)
#knn
d_IDless <- d[,c(2,3,13)]
View(d)
d_IDless <- as_tibble(scale(d_IDless))
library(readxl)
library(tidyverse)
library(class)
library(descr)
library(knitr)
library(readr)
library(tibble)
library(randomForest)
library(caret)
library(tree)
library(mlbench)
library(tidyverse)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(adabag)
library(kknn)
#knn
d_IDless <- d[,c(2,3,13)]
d_IDless <- as_tibble(scale(d_IDless))
View(d_IDless)
d_IDless <- d$CHURN
#knn
d_IDless <- d[,c(2,3,13)]
d_IDless <- as_tibble(scale(d_IDless))
d_IDless$CHURN <- d$CHURN
View(d_IDless)
training <- sample(5000,5000*0.8)
d_train <- d_IDless[training,]
d_test <- d_IDless[-training,]
train <- d_train[,-14]
train <- d_train[,-4]
test <- d_test[,-4]
cl <- d_train[,4]
pred <-knn(train,test,cl,k=20)
View(cl)
d_IDless$CHURN <- ifelse(d$CHURN==1,"CHURN","NO_CHURN")
training <- sample(5000,5000*0.8)
d_train <- d_IDless[training,]
d_test <- d_IDless[-training,]
train <- d_train[,-4]
test <- d_test[,-4]
cl <- d_train[,4]
View(cl)
pred <-knn(train,test,cl,k=20)
pred <-knn(train,test,cl,k=20)
class(train)
class(test)
class(cl)
mean(d$CHURN)
View(d)
#logistic regression
d_sel <- d[,c(2,3,4,6,7,8,9,12,13)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel
#logistic regression
d_sel <- d[,c(2,3,4,5,6,7,8,9,12,13,14)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel
d_sel$ICALL <- ifelse(d_sel$ICALL>mean(d_sel$ICALL),1,0)
d_sel <- d[,c(2,3,4,5,6,7,8,9,12,13,14)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$ICALL <- ifelse(d_sel$ICALL>mean(d_sel$ICALL),1,0)
d_sel
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$ICALL <- ifelse(d_sel$ICALL>mean(d_sel$ICALL),1,0)
d_sel
mod <- lm(CHURN~.,d_sel)
d_sel
#logistic regression
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14)]
#logistic regression
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14)]
#logistic regression
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14,15)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$ICALL <- ifelse(d_sel$ICALL>mean(d_sel$ICALL),1,0)
mod <- lm(CHURN~.,d_sel)
summary(mod)
train <- d_train[,-15]
View(d)
#Average by group
group <- d %>% group_by(CUSCALL) %>% summarise(mean(CHURN))
group
library(dplyr)
d_num <- select_if(d,is.numeric)
d_num
cor(d_num)
View(d_num)
View(cor(d_num))
#linear regression
mod <- lm(CHURN~ACLENGTH+INTPLAN+DATAPLAN+as.factor(DATAGB)+OMMIN+OMCALL+OTMIN+OTCALL+NGMIN+IMIN+as.factor(ICALL)+as.factor(CUSCALL),d)
summary(mod)
pred <- predict(mod,d)
pred
view(pred)
pred <- ifelse(pred>0.194)
pred <- ifelse(pred>0.194,1,0)
View(pred)
pred <- predict(mod,d)
mean(pred)
pred <- ifelse(pred>0.1936,1,0)
cor(pred,d$CHURN)
pred <- predict(mod,d)
median(pred)
pred <- predict(mod,d)
median(pred)
pred <- ifelse(pred>0.1936,1,0)
cor(pred,d$CHURN)
confusionMatrix(pred,d$CHURN,dnn=c("Predicted","Actual"))
d$CHURN
length(d$CHURN)
length(pred)
CHURN <- d$CHURN
confusionMatrix(pred,CHURN,dnn=c("Predicted","Actual"))
CHURN <- as.numeric(d$CHURN)
confusionMatrix(pred,CHURN,dnn=c("Predicted","Actual"))
pred <- as.numeric(pred)
confusionMatrix(pred,CHURN,dnn=c("Predicted","Actual"))
multi <- pred*CHURN
sum(multi)
str(CHURN)
str(pred)
test_predictions = predict(pred,CHURN)
pred <- as.numeric(pred)
test_predictions = predict(pred,CHURN)
CHURN <- as.numeric(d$CHURN)
pred <- as.numeric(pred)
multi <- pred*CHURN
sum(multi)
test_predictions = predict(pred,CHURN)
table(factor(pred, levels=min(test):max(test)),
factor(CHURN, levels=min(test):max(test)))
confusionMatrix(as.data.frame(pred),as.data.frame(CHURN),dnn=c("Predicted","Actual"))
CHURN <- as.factor(d$CHURN)
pred <- as.factor(pred)
confusionMatrix(as.data.frame(pred),as.data.frame(CHURN),dnn=c("Predicted","Actual"))
confusionMatrix(pred,CHURN,dnn=c("Predicted","Actual"))
pred <- ifelse(pred>median(pred),1,0)
CHURN <- as.factor(d$CHURN)
pred <- as.factor(pred)
confusionMatrix(pred,CHURN,dnn=c("Predicted","Actual"))
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14,15)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>median(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>median(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>median(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>median(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>median(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>median(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>median(d_sel$IMIN),1,0)
d_sel$ICALL <- ifelse(d_sel$ICALL>median(d_sel$ICALL),1,0)
mod <- lm(CHURN~.,d_sel)
summary(mod)
d_sel <- d[,c(2,3,4,6,7,8,9,12,13,14,15)]
d_sel
d_sel$ACLENGTH <- ifelse(d_sel$ACLENGTH>mean(d_sel$ACLENGTH),1,0)
d_sel$OMMIN <- ifelse(d_sel$OMMIN>mean(d_sel$OMMIN),1,0)
d_sel$OMCALL <- ifelse(d_sel$OMCALL>mean(d_sel$OMCALL),1,0)
d_sel$OTMIN <- ifelse(d_sel$OTMIN>mean(d_sel$OTMIN),1,0)
d_sel$OTCALL <- ifelse(d_sel$OTCALL>mean(d_sel$OTCALL),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$IMIN <- ifelse(d_sel$IMIN>mean(d_sel$IMIN),1,0)
d_sel$ICALL <- ifelse(d_sel$ICALL>mean(d_sel$ICALL),1,0)
mod <- lm(CHURN~.,d_sel)
summary(mod)
#Roberto
d_ro <- d[,c(3,6,13)]
d_ro
#Roberto
d_ro <- d[,c(3,6,13,14)]
d_ro
#Roberto
d_ro <- d[,c(3,6,14,15)]
d_ro
d_ro$OMMIN <- ifelse(d_ro$OMMIN>mean(d_ro$OMMIN,1,0)
d_ro$OMMIN <- ifelse(d_ro$OMMIN>mean(d_ro$OMMIN,1,0)
d_ro$OMMIN <- ifelse(d_ro$OMMIN>mean(d_ro$OMMIN,1,0))
d_ro$OMMIN <- ifelse(d_ro$OMMIN>mean(d_ro$OMMIN,1,0))
d_ro$OMMIN <- ifelse(d_ro$OMMIN>median(d_ro$OMMIN),1,0)
d_ro$CUSCALL <- ifelse(d_ro$CUSCALL>median(d_ro$CUSCALL),1,0)
d_ro
mod <- lm(CHURN~.,d_ro)
pred_ro <- predict(mod,d_ro)
pred_ro
pred_ro <- ifelse(pred_ro>mean(pred_ro),1,0)
confusionMatrix(as.factor(pred),as.factor(d_ro$CHURN),dnn=c("Predicted","Actual"))
summary(mod)
train <- d_train[,-15]
d_ro$OMMIN <- ifelse(d_ro$OMMIN>200,1,0)
d_ro$CUSCALL <- ifelse(d_ro$CUSCALL>3,1,0)
mod <- lm(CHURN~.,d_ro)
summary(mod)
#Roberto
d_ro <- d[,c(3,6,14,15)]
d_ro
d_ro$OMMIN <- ifelse(d_ro$OMMIN>200,1,0)
d_ro$CUSCALL <- ifelse(d_ro$CUSCALL>3,1,0)
mod <- lm(CHURN~.,d_ro)
summary(mod)
pred_ro <- predict(mod,d_ro)
pred_ro <- ifelse(pred_ro>mean(pred_ro),1,0)
confusionMatrix(as.factor(pred),as.factor(d_ro$CHURN),dnn=c("Predicted","Actual"))
max(d_ro$CUSCALL)
#Roberto
d_ro <- d[,c(3,6,14,15)]
#montecarlo
set.seed(1)
#montecarlo
set.seed(999999)
